{"version":3,"sources":["_directives/jsxif.js","appconstants.js","_services/Messagebus.js","components/Header/Header.js","config.js","_services/Itemservice.js","_services/Codeservice.js","components/Home/Card.js","components/Home/Home.js","components/Reports/Reports.js","_services/Userservice.js","components/Users/Users.js","components/Codes/Codes.js","components/Items/Items.js","_services/Authservice.js","components/Login/Login.js","components/Logout/Logout.js","components/Router/Router.js","_interfaces/user.js","_interfaces/code.js","_helpers/fake-data.js","_helpers/fake-backend.js","components/Main.js","index.js"],"names":["JsxIf","cond","children","el","AppConstants","MSG_LOGGED_IN","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","Object","freeze","Header","state","isLoggedIn","user","name","data","setState","className","href","this","id","exact","to","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","singleton","Symbol","singletonEnforcer","ItemService","enforcer","alert","url","config","fetch","method","headers","body","then","response","json","requestOptions","JSON","stringify","CodeService","Card","codetype","code","c","toLowerCase","props","item","title","data-title","data-target","projectcode","getCodeClass","prioritycode","sizecode","statuscode","assignedtouser","Home","itemService","instance","codeService","loading","boardcode","items","cards","codes","prArray","push","getAll","resp","parse","Promise","all","values","console","table","getCards","filter","x","key","codeType","map","getSelectOptions","value","card","i","Reports","columns","selector","sortable","striped","UserService","Users","userService","users","Codes","Items","AuthService","authenticated","username","password","dat","CryptoJS","encrypt","toString","authenticate","sessionStorage","setItem","err","logout","removeItem","Login","redirectToReferrer","error","authService","handleLogin","bind","e","target","login","from","location","pathname","htmlFor","type","placeholder","required","minLength","onChange","handleChange","onClick","Logout","setTimeout","PrivateRoute","component","rest","render","isAuthenticated","Router","path","ERole","User","Admin","ECodeType","Board","Project","Priority","Size","Status","Stage","Column","Tag","Team","db","persistDb","localStorage","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","email","FAKE_CODES","description","FAKE_ITEMS","disporder","createdbyuser","createdtimestamp","toISOString","assignedtimestamp","closedbyuser","closedtimestamp","comments","duedate","FakeDataLoader","str","getItem","Boolean","InitFakeBackend","realFetch","window","opts","resolve","reject","doUpdate","dtype","row","find","keys","forEach","fld","ok","doInsert","doGetAll","includes","endsWith","a","decrypt","Utf8","split","undefined","message","status","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","Main","style","width","margin","maxHeight","minHeight","display","gridTemplateRows","ReactDOM","document","getElementById"],"mappings":"2cACe,SAASA,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,KACpBC,EADsC,wBACtCA,SACJC,EAAK,KAIT,OAHIF,IACAE,EAAK,mCAAGD,KAELC,ECPX,IAGeC,EAHM,CACjBC,cAAe,K,SCCbC,EAAe,I,OAAIC,GAEnBC,EAAa,CACfC,UAAW,SAACC,EAAOC,GAAR,OAAeL,EAAaM,GAAGF,EAAOC,IACjDE,WAAY,SAACH,EAAOC,GAAR,OAAeL,EAAaQ,KAAKJ,EAAOC,IACpDI,IAAK,SAACL,EAAOC,GAAR,OAAeL,EAAaS,IAAIL,EAAOC,IAC5CK,KAAM,SAACN,EAAOO,GAAR,OAAoBX,EAAaU,KAAKN,EAAOO,KAGvDC,OAAOC,OAAOX,GAECA,QC+DAY,E,4MArEXC,MAAQ,CAAEC,YAAY,EAAOC,KAAM,CAAEC,KAAM,K,uDAE3C,WAAqB,IAAD,OAChBhB,EAAWC,UAAUL,EAAaC,eAAe,SAACoB,GAC9C,EAAKC,SAASD,Q,oBAItB,WACI,OACI,sBAAKE,UAAU,gDAAf,UACI,mBAAGC,KAAK,IAAID,UAAU,eAAtB,8BAGA,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eAAf,SAA+BE,KAAKR,MAAME,KAAKC,OAC/C,qBAAKG,UAAU,mBAEnB,cAAC3B,EAAD,CAAOC,KAAM4B,KAAKR,MAAMC,WAAxB,SACI,qBAAKK,UAAU,2BAA2BG,GAAG,kBAA7C,SACI,qBAAIH,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,UAAUL,UAAU,WAAtC,sBAIJ,qBAAIA,UAAU,oBAAd,UACI,mBACIA,UAAU,2BACVC,KAAK,IACLE,GAAG,gBACHG,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,QAPlB,mBAWA,sBAAKT,UAAU,gBAAgBU,kBAAgB,gBAA/C,UACI,cAAC,IAAD,CAASN,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,mBAGA,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,mBAGA,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,yBAKR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,WAAWL,UAAU,WAAvC,uBAIJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,UAAUL,UAAU,WAAtC,oC,GA1DXW,a,eCNN,EACH,4BCCNC,EAAYC,SACZC,EAAoBD,SA6CXE,E,WAzCX,WAAYC,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBAlClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAIG,EAAYD,IAE/BZ,KAAKU,O,KCZdA,EAAYC,SACZC,EAAoBD,SA6CXiB,E,WAzCX,WAAYd,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBAlClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAIkB,EAAYhB,IAE/BZ,KAAKU,O,KC8GLmB,E,4MAzHXrC,MAAQ,G,uDAER,c,0BAEA,SAAasC,EAAUC,GACnB,IAAMC,EAAID,EAAKE,cACf,MAAiB,SAAbH,EACO,gBAEM,SAAbA,EACU,UAANE,EACO,eAED,WAANA,EACO,gBAEJ,gBAEM,WAAbF,EACU,SAANE,EACO,eAED,WAANA,EACO,gBAEJ,gBAED,SAANA,EACO,eAED,WAANA,EACO,gBAEJ,kB,oBAGX,WACI,OACI,qBAAKlC,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAMA,UAAU,KAAhB,cAAuBE,KAAKkC,MAAMC,KAAKlC,GAAvC,OADJ,IACwDD,KAAKkC,MAAMC,KAAKC,SAExE,qBAAKtC,UAAU,SAAf,SACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,sBAAMxC,UAAU,OAAhB,wBAIZ,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,oBAEI,uBACA,uBAAMA,UAAS,8BAAf,UACK,IACAE,KAAKkC,MAAMC,KAAKI,kBAGzB,sBAAKzC,UAAU,OAAf,qBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,WACAxC,KAAKkC,MAAMC,KAAKI,cAHxB,SAMKvC,KAAKkC,MAAMC,KAAKM,kBAGzB,sBAAK3C,UAAU,OAAf,iBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,OACAxC,KAAKkC,MAAMC,KAAKO,WAHxB,SAMK1C,KAAKkC,MAAMC,KAAKO,cAGzB,sBAAK5C,UAAU,OAAf,mBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,SACAxC,KAAKkC,MAAMC,KAAKQ,aAHxB,SAMK3C,KAAKkC,MAAMC,KAAKQ,gBAGzB,sBAAK7C,UAAU,OAAf,qBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,OACAxC,KAAKkC,MAAMC,KAAKS,iBAHxB,SAMK5C,KAAKkC,MAAMC,KAAKS,kC,GA/GlCnC,aCoMJoC,E,4MA9LXrD,MAAQ,CACJsD,YAAajC,EAAYkC,SACzBC,YAAapB,EAAYmB,SACzBE,SAAS,EACTC,UAAW,O,EAEfC,MAAQ,G,EACRC,MAAQ,G,EACRC,MAAQ,G,uDAER,WAAqB,IAAD,OACZC,EAAU,GACdA,EAAQC,KACJvD,KAAKR,MAAMsD,YAAYU,SAASlC,MAAK,SAACmC,GAClC,EAAKN,MAAQzB,KAAKgC,MAAMD,OAGhCH,EAAQC,KACJvD,KAAKR,MAAMwD,YAAYQ,SAASlC,MAAK,SAACmC,GAClC,EAAKJ,MAAQ3B,KAAKgC,MAAMD,OAGhCE,QAAQC,IAAIN,GAAShC,MAAK,SAACuC,GACvBC,QAAQC,MAAM,EAAKV,OACnB,EAAKW,SAAS,EAAKxE,MAAM0D,WACzB,EAAKrD,SAAS,CAAEoD,SAAS,S,sBAIjC,SAASC,GACLlD,KAAKoD,MAAQpD,KAAKmD,MAAMc,QAAO,SAACC,GAAD,OAAOA,EAAEhB,YAAcA,KACtDY,QAAQC,MAAM/D,KAAKoD,S,8BAGvB,SAAiBe,EAAKC,GAClB,OAAOpE,KAAKqD,MACPY,QAAO,SAACC,GAAD,OAAOA,EAAEpC,WAAasC,KAC7BC,KAAI,SAACH,GACF,MAAO,CACHC,IAAKC,EAAW,IAAMF,EAAEjE,GACxB8B,KAAMmC,EAAEnC,W,oBAKxB,WACI,OACI,8BACI,sBAAKjC,UAAU,iBAAf,UACI,+BACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SACI,iDACmB,sBAAMA,UAAU,YAAhB,SAA6BE,KAAKR,MAAM0D,iBAG/D,sBAAKpD,UAAU,SAAf,UACI,sBAAMA,UAAU,OAAhB,0BACA,wBACIA,UAAU,+CACVG,GAAG,YACHN,KAAK,YAHT,SAKKK,KAAKsE,iBAAiB,KAAM,SAASD,KAAI,SAACrC,GAAD,OACtC,wBAAoBuC,MAAOvC,EAAED,KAA7B,SACKC,EAAED,MADMC,EAAEmC,aAM3B,sBAAKrE,UAAU,SAAf,UACI,sBAAMA,UAAU,OAAhB,qBACA,wBACIA,UAAU,+CACVG,GAAG,cACHN,KAAK,cAHT,SAKKK,KAAKsE,iBAAiB,KAAM,WAAWD,KAAI,SAACrC,GAAD,OACxC,wBAAoBuC,MAAOvC,EAAED,KAA7B,SACKC,EAAED,MADMC,EAAEmC,kBAQnC,sBAAKrE,UAAU,OAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,wBACA,8BACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,mBAAGxC,UAAU,iCAIzB,oBAAIA,UAAU,mBAAd,SACKE,KAAKoD,MACDa,QAAO,SAACC,GAAD,MAAwB,SAAjBA,EAAEvB,cAChB0B,KAAI,SAACG,EAAMC,GAAP,OACD,6BACI,cAAC,EAAD,CAActC,KAAMqC,GAATC,aAK/B,sBAAK3E,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,sBACA,8BACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,mBAAGxC,UAAU,iCAIzB,oBAAIA,UAAU,mBAAd,SACKE,KAAKoD,MACDa,QAAO,SAACC,GAAD,MAAwB,aAAjBA,EAAEvB,cAChB0B,KAAI,SAACG,EAAMC,GAAP,OACD,6BACI,cAAC,EAAD,CAActC,KAAMqC,GAATC,aAK/B,sBAAK3E,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,uBACA,8BACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,mBAAGxC,UAAU,iCAIzB,oBAAIA,UAAU,mBAAd,SACKE,KAAKoD,MACDa,QAAO,SAACC,GAAD,MAAwB,WAAjBA,EAAEvB,cAChB0B,KAAI,SAACG,EAAMC,GAAP,OACD,6BACI,cAAC,EAAD,CAActC,KAAMqC,GAATC,aAK/B,sBAAK3E,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,uBACA,8BACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,mBAAGxC,UAAU,iCAIzB,oBAAIA,UAAU,mBAAd,SACKE,KAAKoD,MACDa,QAAO,SAACC,GAAD,MAAwB,WAAjBA,EAAEvB,cAChB0B,KAAI,SAACG,EAAMC,GAAP,OACD,6BACI,cAAC,EAAD,CAActC,KAAMqC,GAATC,yB,GAnLpChE,a,iBCwDJiE,E,4MAzDXlF,MAAQ,CAAEsD,YAAajC,EAAYkC,SAAUE,SAAS,G,EACtDE,MAAQ,G,EACRwB,QAAU,CACN,CACIhF,KAAM,KACNiF,SAAU,KACVC,UAAU,GAEd,CACIlF,KAAM,QACNiF,SAAU,QACVC,UAAU,GAEd,CACIlF,KAAM,aACNiF,SAAU,YACVC,UAAU,GAEd,CACIlF,KAAM,OACNiF,SAAU,WACVC,UAAU,GAEd,CACIlF,KAAM,SACNiF,SAAU,aACVC,UAAU,GAEd,CACIlF,KAAM,cACNiF,SAAU,iBACVC,UAAU,GAEd,CACIlF,KAAM,eACNiF,SAAU,cACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChB7E,KAAKR,MAAMsD,YAAYU,SAASlC,MAAK,SAACmC,GAClC,EAAKN,MAAQzB,KAAKgC,MAAMD,GACxBK,QAAQC,MAAM,EAAKZ,OACnB,EAAKtD,SAAS,CAAEoD,SAAS,S,oBAIjC,WACI,OACI,gCACI,yCACA,cAAC,IAAD,CAAW6B,QAAQ,OAAOH,QAAS3E,KAAK2E,QAAS/E,KAAMI,KAAKmD,e,GApDtD1C,aCHhBC,EAAYC,SACZC,EAAoBD,SAyDXoE,E,WArDX,WAAYjE,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,0BAGlE,SAAa5B,GACT,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,sBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GACpC,OAAOA,EAASC,Y,wBAIxB,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBA9ClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAIqE,EAAYnE,IAE/BZ,KAAKU,O,KCsCLsE,E,4MA9CXxF,MAAQ,CAAEyF,YAAaF,EAAYhC,SAAUE,SAAS,G,EACtDiC,MAAQ,G,EACRP,QAAU,CACN,CACIhF,KAAM,KACNiF,SAAU,KACVC,UAAU,GAEd,CACIlF,KAAM,YACNiF,SAAU,WACVC,UAAU,GAEd,CACIlF,KAAM,OACNiF,SAAU,OACVC,UAAU,GAEd,CACIlF,KAAM,QACNiF,SAAU,QACVC,UAAU,GAEd,CACIlF,KAAM,OACNiF,SAAU,OACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChB7E,KAAKR,MAAMyF,YAAYzB,SAASlC,MAAK,SAACmC,GAClC,EAAKyB,MAAQxD,KAAKgC,MAAMD,GACxB,EAAK5D,SAAS,CAAEoD,SAAS,S,oBAIjC,WACI,OACI,gCACI,uCACA,cAAC,IAAD,CAAW6B,QAAQ,OAAOH,QAAS3E,KAAK2E,QAAS/E,KAAMI,KAAKkF,e,GAzCxDzE,aC2CL0E,E,4MA1CX3F,MAAQ,CAAEwD,YAAapB,EAAYmB,SAAUE,SAAS,G,EACtDI,MAAQ,G,EACRsB,QAAU,CACN,CACIhF,KAAM,KACNiF,SAAU,KACVC,UAAU,GAEd,CACIlF,KAAM,YACNiF,SAAU,WACVC,UAAU,GAEd,CACIlF,KAAM,OACNiF,SAAU,OACVC,UAAU,GAEd,CACIlF,KAAM,cACNiF,SAAU,cACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChB7E,KAAKR,MAAMwD,YAAYQ,SAASlC,MAAK,SAACmC,GAClC,EAAKJ,MAAQ3B,KAAKgC,MAAMD,GACxBK,QAAQC,MAAM,EAAKV,OACnB,EAAKxD,SAAS,CAAEoD,SAAS,S,oBAIjC,WACI,OACI,gCACI,uCACA,cAAC,IAAD,CAAW6B,QAAQ,OAAOH,QAAS3E,KAAK2E,QAAS/E,KAAMI,KAAKqD,e,GArCxD5C,aC0DL2E,E,4MAzDX5F,MAAQ,CAAEsD,YAAajC,EAAYkC,SAAUE,SAAS,G,EACtDE,MAAQ,G,EACRwB,QAAU,CACN,CACIhF,KAAM,KACNiF,SAAU,KACVC,UAAU,GAEd,CACIlF,KAAM,QACNiF,SAAU,QACVC,UAAU,GAEd,CACIlF,KAAM,aACNiF,SAAU,YACVC,UAAU,GAEd,CACIlF,KAAM,OACNiF,SAAU,WACVC,UAAU,GAEd,CACIlF,KAAM,SACNiF,SAAU,aACVC,UAAU,GAEd,CACIlF,KAAM,cACNiF,SAAU,iBACVC,UAAU,GAEd,CACIlF,KAAM,eACNiF,SAAU,cACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChB7E,KAAKR,MAAMsD,YAAYU,SAASlC,MAAK,SAACmC,GAClC,EAAKN,MAAQzB,KAAKgC,MAAMD,GACxBK,QAAQC,MAAM,EAAKZ,OACnB,EAAKtD,SAAS,CAAEoD,SAAS,S,oBAIjC,WACI,OACI,gCACI,uCACA,cAAC,IAAD,CAAW6B,QAAQ,OAAOH,QAAS3E,KAAK2E,QAAS/E,KAAMI,KAAKmD,e,GApDxD1C,a,gBCFdC,EAAYC,SACZC,EAAoBD,SAiDX0E,E,WA7CX,WAAYvE,GAAW,yBAUvBpB,KAAO,KAVe,KAWtB4F,eAAgB,EAXM,KAYtBL,YAAcF,EAAYhC,SAXlBjC,IAAaF,GAAmBG,MAAM,8B,iDAa9C,WAII,OAHKf,KAAKU,KACNV,KAAKU,GAAa,IAAI2E,EAAYzE,IAE/BZ,KAAKsF,gB,mBAGhB,SAAMC,EAAUC,GAAW,IAAD,OACtBxF,KAAKsF,eAAgB,EACrB,IACMG,EADIC,SAAgBC,QAAhB,UAA2BJ,EAA3B,YAAuCC,GAAY,oCAC7CI,WAChB,OAAO5F,KAAKiF,YAAYY,aAAa,CAAEJ,IAAKA,IAAOnE,MAC/C,SAAC5B,GAIG,OAHA,EAAKA,KAAOgC,KAAKgC,MAAMhE,GACvBoG,eAAeC,QAAQ,OAAQrE,KAAKC,UAAU,EAAKjC,OACnD,EAAK4F,eAAgB,EACd,CAAE7F,YAAY,EAAMC,KAAM,CAAEC,KAAM,EAAKD,KAAKC,UAEvD,SAACqG,GAEG,OADA,EAAKC,SACE,CAAExG,YAAY,EAAOC,KAAM,CAAEC,KAAM,U,oBAKtD,WACImG,eAAeI,WAAW,QAC1BlG,KAAKsF,eAAgB,K,qBAtCzB,WAII,OAHKtF,KAAKU,KACNV,KAAKU,GAAa,IAAI2E,EAAYzE,IAE/BZ,KAAKU,O,KCoFLyF,E,kDAxFX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IAJV1C,MAAQ,CAAE4G,oBAAoB,EAAOb,SAAU,QAASC,SAAU,QAASa,MAAO,IAG/D,EAFnBC,YAAcjB,EAAYtC,SAItB,EAAKwD,YAAc,EAAKA,YAAYC,KAAjB,gBAFJ,E,gDAKnB,SAAa7G,EAAM8G,GACf,IAAI7G,EAAOI,KAAKR,MAChBI,EAAKD,GAAQ8G,EAAEC,OAAOnC,MACtBvE,KAAKH,SAASD,K,yBAGlB,WAAe,IAAD,OACVI,KAAKsG,YAAYK,MAAM3G,KAAKR,MAAM+F,SAAUvF,KAAKR,MAAMgG,UAAUlE,MAAK,SAACmC,GAC/DA,EAAKhE,aACLd,EAAWQ,KAAKZ,EAAaC,cAAeiF,GAC5C,EAAK5D,SAAS,CAAEuG,oBAAoB,U,oBAKhD,WAAU,IAAD,OACGQ,GAAS5G,KAAKkC,MAAM2E,SAASrH,OAAS,CAAEoH,KAAM,CAAEE,SAAU,OAA1DF,KAER,OAD+B5G,KAAKR,MAA5B4G,mBAEG,cAAC,IAAD,CAAUjG,GAAIyG,IAIrB,sBAAK9G,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,kDAEI,uBAFJ,gBAKA,gEAGR,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,aAAf,SACI,iCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOiH,QAAQ,WAAf,uBACA,uBACIC,KAAK,OACLlH,UAAU,eACVmH,YAAY,YACZC,UAAQ,EACRC,UAAU,IACV5C,MAAOvE,KAAKR,MAAM+F,SAClB6B,SAAU,SAACX,GAAD,OAAO,EAAKY,aAAa,WAAYZ,SAGvD,sBAAK3G,UAAU,aAAf,UACI,uBAAOiH,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLlH,UAAU,eACVmH,YAAY,GACZC,UAAQ,EACRC,UAAU,IACV5C,MAAOvE,KAAKR,MAAMgG,SAClB4B,SAAU,SAACX,GAAD,OAAO,EAAKY,aAAa,WAAYZ,SAGvD,qBAAK3G,UAAU,aAAf,SACI,uBACIkH,KAAK,SACLlH,UAAU,4BACVyE,MAAM,QACN+C,QAAStH,KAAKuG,gBAGtB,qBAAKzG,UAAU,aAAf,SACI,mBAAGC,KAAK,IAAID,UAAU,eAAtB,gCAIJ,qBAAKA,UAAU,QAAf,SAAwBE,KAAKR,MAAM6G,sB,GAnF3C5F,aCgCL8G,E,sKAhCX,WACK,M,oBAQL,WAQI,OAPAlC,EAAYtC,SAASkD,SACrBuB,YAAW,WACP7I,EAAWQ,KAAKZ,EAAaC,cAAe,CACxCiB,YAAY,EACZC,KAAM,CAAEC,KAAM,QAEnB,KAEC,gCACI,mDACA,sCACU,IACN,cAAC,IAAD,CAASO,OAAK,EAACC,GAAG,QAAlB,kBAEW,IAJf,sB,GArBKM,aCoBfgH,EAAe,SAAC,GAAD,IAAchH,EAAd,EAAGiH,UAAyBC,EAA5B,oCACjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAC1F,GAAD,OACJmD,EAAYtC,SAAS8E,gBACjB,cAACpH,EAAD,eAAeyB,IAEf,cAAC,IAAD,CACI/B,GAAI,CACA2G,SAAU,iBAQnBgB,EA/BA,SAAC5F,GAAD,OACX,eAAC,IAAD,WACI,cAAC,IAAD,CAAOhC,OAAK,EAAC6H,KAAK,SAASL,UAAWvB,IACtC,cAAC,IAAD,CAAOjG,OAAK,EAAC6H,KAAK,UAAUL,UAAWH,IAEvC,cAAC,EAAD,CAAcQ,KAAK,UAAUL,UAAW7E,IACxC,cAAC,EAAD,CAAckF,KAAK,WAAWL,UAAWhD,IACzC,cAAC,EAAD,CAAcqD,KAAK,SAASL,UAAW1C,IACvC,cAAC,EAAD,CAAc+C,KAAK,SAASL,UAAWvC,IACvC,cAAC,EAAD,CAAc4C,KAAK,SAASL,UAAWtC,IACvC,cAAC,EAAD,CAAc2C,KAAK,IAAIL,UAAW7E,QCtB7BmF,EAAQ3I,OAAOC,OAAO,CAC/B2I,KAAM,OACNC,MAAO,UCFEC,EAAY9I,OAAOC,OAAO,CACnC8I,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,IAAK,MACLC,KAAM,SCFCC,EAAK,KAIHC,EAAY,WACrBC,aAAahD,QAAQ,SAAUrE,KAAKC,UAAUkH,KAE5CG,EAAU,SAACC,EAAQC,GACrB,OAAO,IAAIC,KAAKF,EAAOG,cAAeH,EAAOI,WAAYJ,EAAOK,UAAYJ,IAK1EK,GAAa,CACf,CACItJ,GAAI,EACJsF,SAAU,QACV5F,KAAM,aACN6J,MAAO,iBACPhE,SAAU,QACVpF,KAAM4H,EAAME,MACZhF,UAAW,OAEf,CACIjD,GAAI,EACJsF,SAAU,SACV5F,KAAM,iBACN6J,MAAO,iBACPhE,SAAU,SACVpF,KAAM4H,EAAMC,KACZ/E,UAAW,OAEf,CACIjD,GAAI,EACJsF,SAAU,YACV5F,KAAM,cACN6J,MAAO,iBACPhE,SAAU,QACVpF,KAAM4H,EAAMC,KACZ/E,UAAW,OAEf,CACIjD,GAAI,EACJsF,SAAU,YACV5F,KAAM,eACN6J,MAAO,iBACPhE,SAAU,QACVpF,KAAM4H,EAAMC,KACZ/E,UAAW,OAEf,CACIjD,GAAI,EACJsF,SAAU,aACV5F,KAAM,sBACN6J,MAAO,mBACPhE,SAAU,UACVpF,KAAM4H,EAAMC,KACZ/E,UAAW,OAEf,CACIjD,GAAI,EACJsF,SAAU,aACV5F,KAAM,eACN6J,MAAO,mBACPhE,SAAU,UACVpF,KAAM4H,EAAMC,KACZ/E,UAAW,QAIbuG,GAAa,CAEf,CACIxJ,GAAI,EACJ6B,SAAUqG,EAAUC,MACpBrG,KAAM,MACN2H,YAAa,aAEjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUC,MACpBrG,KAAM,OACN2H,YAAa,cAGjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUE,QACpBtG,KAAM,QACN2H,YAAa,kBAEjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUE,QACpBtG,KAAM,UACN2H,YAAa,oBAGjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUG,SACpBvG,KAAM,OACN2H,YAAa,iBAEjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUG,SACpBvG,KAAM,SACN2H,YAAa,mBAEjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUG,SACpBvG,KAAM,MACN2H,YAAa,gBAGjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUK,OACpBzG,KAAM,OACN2H,YAAa,QAEjB,CACIzJ,GAAI,EACJ6B,SAAUqG,EAAUK,OACpBzG,KAAM,WACN2H,YAAa,YAEjB,CACIzJ,GAAI,GACJ6B,SAAUqG,EAAUK,OACpBzG,KAAM,SACN2H,YAAa,UAEjB,CACIzJ,GAAI,GACJ6B,SAAUqG,EAAUK,OACpBzG,KAAM,SACN2H,YAAa,UAGjB,CACIzJ,GAAI,GACJ6B,SAAUqG,EAAUI,KACpBxG,KAAM,QACN2H,YAAa,SAEjB,CACIzJ,GAAI,GACJ6B,SAAUqG,EAAUI,KACpBxG,KAAM,SACN2H,YAAa,UAEjB,CACIzJ,GAAI,GACJ6B,SAAUqG,EAAUI,KACpBxG,KAAM,QACN2H,YAAa,UAIfC,GAAa,CACf,CACI1J,GAAI,EACJmC,MAAO,kBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,OACdC,SAAU,SACVC,WAAY,OACZkH,cAAe,OACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,QAChBoH,mBAAmB,IAAIb,MAAOY,cAC9BE,aAAc,GACdC,gBAAiB,GACjBR,YAAa,wFACbS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,yBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,GAChBoH,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,yBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,GAChBoH,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,yBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,GAChBoH,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,uBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,GAChBoH,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,uBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,WACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,OAChBoH,mBAAmB,IAAIb,MAAOY,cAC9BE,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,oBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,SACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,OAChBoH,mBAAmB,IAAIb,MAAOY,cAC9BE,aAAc,OACdC,iBAAiB,IAAIf,MAAOY,cAC5BL,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,kBACPwH,UAAW,MACX1G,UAAW,MACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,SACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,OAChBoH,mBAAmB,IAAIb,MAAOY,cAC9BE,aAAc,GACdC,gBAAiB,GACjBR,YACI,wHACJS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,eAErC,CACI9J,GAAI,EACJmC,MAAO,gCACPwH,UAAW,MACX1G,UAAW,OACXX,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkH,cAAe,QACfC,kBAAkB,IAAIX,MAAOY,cAC7BnH,eAAgB,GAChBoH,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBR,YAAa,+CACbS,SAAU,GACVC,QAASpB,EAAQ,IAAIG,KAAQ,IAAIY,gBAM5BM,GAAiB,WAC1B,IAAIC,EAAMvB,aAAawB,QAAQ,UAC/B,IAAKC,QAAQF,GAAM,CACf,IAAIzB,EAAK,CACL3D,MAAOqE,GACPxH,KAAM0H,GACNtH,KAAMwH,IAEVZ,aAAahD,QAAQ,SAAUrE,KAAKC,UAAUkH,IA/VlDA,EAAKnH,KAAKgC,MAAMqF,aAAawB,QAAQ,YCNlC,SAASE,KACZ,IAAIC,EAAYC,OAAOzJ,MACvByJ,OAAOzJ,MAAQ,SAAUF,EAAK4J,GAAO,IACzBzJ,EAAoByJ,EAApBzJ,OACFE,GADsBuJ,EAAZxJ,QACHwJ,EAAKvJ,MAAQK,KAAKgC,MAAMkH,EAAKvJ,OAE1C,OAAO,IAAIsC,SAAQ,SAACkH,EAASC,GAoHzB,SAASC,EAAStF,EAAKuF,GACnB,IAAIC,EAAMpC,EAAGmC,GAAOE,MAAK,SAAChH,GAAD,OAAOA,EAAEjE,KAAOwF,EAAIxF,MAS7C,OARAZ,OAAO8L,KAAK1F,GAAK2F,SAAQ,SAACC,GACV,OAARA,IACAJ,EAAII,GAAO5F,EAAI4F,OAGvB7D,YAAW,WACPsB,MACD,KACIwC,EAAG,IAKd,SAASC,EAAS9F,EAAKuF,GAKnB,OAJAnC,EAAGmC,GAAOzH,KAAKkC,GACf+B,YAAW,WACPsB,MACD,KACIwC,EAAG,IAKd,SAASE,EAASR,GAEd,OAAOM,EADOzC,EAAGmC,IAMrB,SAASM,EAAGjK,GACRwJ,EAAQ,CACJS,IAAI,EACJ9J,KAAM,kBAAMmC,QAAQkH,QAAQnJ,KAAKC,UAAUN,OAtJnDmG,YAEA,WACI,QAAQ,GACJ,KAAKxG,EAAIyK,SAAS,UACd,OAkBZ,SAAyBzK,EAAKG,GAC1B,IAAM6J,EAAQ,QACd,QAAQ,GACJ,KAAKhK,EAAI0K,SAAS,kBAA+B,SAAXvK,EAClC,OAkEZ,SAAsBsE,GAClB,IAEMkG,EAFIjG,SAAgBkG,QAAQnG,EAAK,oCACvBG,SAASF,MAAamG,MACxBC,MAAM,KAChBb,EAAMpC,EAAG3D,MAAMgG,MAAK,SAAChH,GAAD,OAAOA,EAAEqB,WAAaoG,EAAE,IAAMzH,EAAEsB,WAAamG,EAAE,MACvE,QAAYI,IAARd,EACA,OA8DOe,EA9DM,2BA+DjBnB,EAAQ,CAAEoB,OAAQ,IAAKzK,KAAM,kBAAMmC,QAAQkH,QAAQnJ,KAAKC,UAAU,CAAEqK,gBADxE,IAAeA,EA5DX,IAAMtM,EAAOuL,EACb,OAAOK,EAAG,CACNrL,GAAIP,EAAKO,GACTsF,SAAU7F,EAAK6F,SACf5F,KAAMD,EAAKC,KACX6J,MAAO,GACPpJ,KAAMV,EAAKU,KACX8L,MAAM,mBAAD,OAAqBxM,EAAKO,IAC/BiD,UAAWxD,EAAKwD,YAlFL2C,CAAaxE,EAAKoE,KAE7B,KAAKzE,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAO4J,EAAS1J,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAOoK,EAASlK,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,QAAXvK,EAC5B,OAAOqK,EAASR,GAEpB,QACI,OAAON,EAAU1J,EAAK4J,GACjBtJ,MAAK,SAACC,GAAD,OAAcsJ,EAAQtJ,MAC3B4K,OAAM,SAAC9F,GAAD,OAAWyE,EAAOzE,OApCtB+F,CAAgBpL,EAAKG,GAEhC,KAAKH,EAAIyK,SAAS,UACd,OAwCZ,SAAyBzK,EAAKG,GAC1B,IAAM6J,EAAQ,OACd,QAAQ,GACJ,KAAKhK,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAO4J,EAAS1J,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAOoK,EAASlK,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,QAAXvK,EAC5B,OAAOqK,EAASR,GAEpB,QACI,OAAON,EAAU1J,EAAK4J,GACjBtJ,MAAK,SAACC,GAAD,OAAcsJ,EAAQtJ,MAC3B4K,OAAM,SAAC9F,GAAD,OAAWyE,EAAOzE,OAvDtBgG,CAAgBrL,EAAKG,GAEhC,KAAKH,EAAIyK,SAAS,UACd,OA2DZ,SAAyBzK,EAAKG,GAC1B,IAAM6J,EAAQ,OACd,QAAQ,GACJ,KAAKhK,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAO4J,EAAS1J,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,SAAXvK,EAC5B,OAAOoK,EAASlK,EAAM2J,GAE1B,KAAKhK,EAAI0K,SAAS,YAAyB,QAAXvK,EAC5B,OAAOqK,EAASR,GAEpB,QACI,OAAON,EAAU1J,EAAK4J,GACjBtJ,MAAK,SAACC,GAAD,OAAcsJ,EAAQtJ,MAC3B4K,OAAM,SAAC9F,GAAD,OAAWyE,EAAOzE,OA1EtBiG,CAAgBtL,EAAKG,GAEhC,QACI,OAAOuJ,EAAU1J,EAAK4J,GACjBtJ,MAAK,SAACC,GAAD,OAAcsJ,EAAQtJ,MAC3B4K,OAAM,SAAC9F,GAAD,OAAWyE,EAAOzE,SAhBjB,S,ICsBrBkG,G,kDAxBX,WAAYrK,GAAQ,IAAD,6BACf,cAAMA,GACNmI,KACAI,KAHe,E,0CAMnB,WASI,OACI,sBAAK+B,MATM,CACXC,MAAO,MACPC,OAAQ,OACRC,UAAW,QACXC,UAAW,QACXC,QAAS,OACTC,iBAAkB,YAGlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GAnBGrM,a,OCDnBsM,IAASnF,OACL,cAAC,IAAD,UACI,cAAC,GAAD,MAEJoF,SAASC,eAAe,W","file":"static/js/main.6a58bc13.chunk.js","sourcesContent":["import React from 'react';\r\nexport default function JsxIf({ cond, ...props }) {\r\n    const { children } = props;\r\n    let el = null;\r\n    if (cond) {\r\n        el = <>{children}</>;\r\n    }\r\n    return el;\r\n}\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst MessageBus = {\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\n    off: (event, fn) => eventEmitter.off(event, fn),\n    emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(MessageBus);\n\nexport default MessageBus;\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport JsxIf from '../../_directives/jsxif';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Header extends Component {\r\n    state = { isLoggedIn: false, user: { name: '' } };\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_LOGGED_IN, (data) => {\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n                <a href=\"#\" className=\"navbar-brand\">\r\n                    Bug Tracker Lite\r\n                </a>\r\n                <div className=\"title\">\r\n                    <div className=\"title-left\"></div>\r\n                    <div className=\"title-center\">{this.state.user.name}</div>\r\n                    <div className=\"title-right\"></div>\r\n                </div>\r\n                <JsxIf cond={this.state.isLoggedIn}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/kanban\" className=\"nav-link\">\r\n                                    Kanban\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"adminDropdown\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    Admin\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                                    <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                        Users\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                        Codes\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                        Items\r\n                                    </NavLink>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                                    Reports\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </JsxIf>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    getCodeClass(codetype, code) {\r\n        const c = code.toLowerCase();\r\n        if (codetype === 'user') {\r\n            return 'badge-primary';\r\n        }\r\n        if (codetype === 'size') {\r\n            if (c === 'large') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (codetype !== 'status') {\r\n            if (c === 'high') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (c === 'open') {\r\n            return 'badge-danger';\r\n        }\r\n        if (c !== 'closed') {\r\n            return 'badge-warning';\r\n        }\r\n        return 'badge-success';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-card\">\r\n                <div className=\"item-card-body\">\r\n                    <div className=\"header\">\r\n                        <div className=\"title\">\r\n                            <span className=\"id\">({this.props.item.id})</span> {this.props.item.title}\r\n                        </div>\r\n                        <div className=\"handle\">\r\n                            <button\r\n                                className=\"btn-edit\"\r\n                                data-title=\"Edit\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit\"\r\n                            >\r\n                                <span className=\"icon\">...</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-card-text\">\r\n                        <div className=\"codes\">\r\n                            <div className=\"code\">\r\n                                Project\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-info`}>\r\n                                    {' '}\r\n                                    {this.props.item.projectcode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Priority\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'priority',\r\n                                        this.props.item.projectcode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.prioritycode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Size\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'size',\r\n                                        this.props.item.sizecode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.sizecode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Status\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'status',\r\n                                        this.props.item.statuscode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.statuscode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Assigned\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'user',\r\n                                        this.props.item.assignedtouser\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.assignedtouser}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\n\r\nimport Card from './Card';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        loading: true,\r\n        boardcode: 'Dev',\r\n    };\r\n    items = [];\r\n    cards = [];\r\n    codes = [];\r\n\r\n    componentDidMount() {\r\n        let prArray = [];\r\n        prArray.push(\r\n            this.state.itemService.getAll().then((resp) => {\r\n                this.items = JSON.parse(resp);\r\n            })\r\n        );\r\n        prArray.push(\r\n            this.state.codeService.getAll().then((resp) => {\r\n                this.codes = JSON.parse(resp);\r\n            })\r\n        );\r\n        Promise.all(prArray).then((values) => {\r\n            console.table(this.codes);\r\n            this.getCards(this.state.boardcode);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    getCards(boardcode) {\r\n        this.cards = this.items.filter((x) => x.boardcode === boardcode);\r\n        console.table(this.cards);\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        return this.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"home-container\">\r\n                    <form>\r\n                        <div className=\"header\">\r\n                            <div className=\"title\">\r\n                                <h5>\r\n                                    Kanban Board - <span className=\"boardcode\">{this.state.boardcode}</span>\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"select\">\r\n                                <span className=\"text\">Kanban Board</span>\r\n                                <select\r\n                                    className=\"form-control-inline form-control-sm dropdown\"\r\n                                    id=\"boardcode\"\r\n                                    name=\"boardcode\"\r\n                                >\r\n                                    {this.getSelectOptions('id', 'BOARD').map((c) => (\r\n                                        <option key={c.key} value={c.code}>\r\n                                            {c.code}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"select\">\r\n                                <span className=\"text\">Project</span>\r\n                                <select\r\n                                    className=\"form-control-inline form-control-sm dropdown\"\r\n                                    id=\"projectcode\"\r\n                                    name=\"projectcode\"\r\n                                >\r\n                                    {this.getSelectOptions('id', 'PROJECT').map((c) => (\r\n                                        <option key={c.key} value={c.code}>\r\n                                            {c.code}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"main\">\r\n                        <div className=\"column\">\r\n                            <div className=\"header\">\r\n                                <div className=\"title\">Open Items</div>\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        data-title=\"Edit\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#edit\"\r\n                                    >\r\n                                        <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"open-items items\">\r\n                                {this.cards\r\n                                    .filter((x) => x.statuscode === 'Open')\r\n                                    .map((card, i) => (\r\n                                        <li>\r\n                                            <Card key={i} item={card} />\r\n                                        </li>\r\n                                    ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"header\">\r\n                                <div className=\"title\">Assigned</div>\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        data-title=\"Edit\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#edit\"\r\n                                    >\r\n                                        <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"open-items items\">\r\n                                {this.cards\r\n                                    .filter((x) => x.statuscode === 'Assigned')\r\n                                    .map((card, i) => (\r\n                                        <li>\r\n                                            <Card key={i} item={card} />\r\n                                        </li>\r\n                                    ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"header\">\r\n                                <div className=\"title\">In Review</div>\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        data-title=\"Edit\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#edit\"\r\n                                    >\r\n                                        <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"open-items items\">\r\n                                {this.cards\r\n                                    .filter((x) => x.statuscode === 'Review')\r\n                                    .map((card, i) => (\r\n                                        <li>\r\n                                            <Card key={i} item={card} />\r\n                                        </li>\r\n                                    ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"header\">\r\n                                <div className=\"title\">Completed</div>\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        data-title=\"Edit\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#edit\"\r\n                                    >\r\n                                        <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"open-items items\">\r\n                                {this.cards\r\n                                    .filter((x) => x.statuscode === 'Closed')\r\n                                    .map((card, i) => (\r\n                                        <li>\r\n                                            <Card key={i} item={card} />\r\n                                        </li>\r\n                                    ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            console.table(this.items);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return response.json();\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../../_services/Userservice';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Users</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../../_services/Codeservice';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n            console.table(this.codes);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Codes</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.codes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Items extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            console.table(this.items);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Items</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = JSON.parse(user);\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nclass Login extends Component {\r\n    state = { redirectToReferrer: false, username: 'admin', password: 'admin', error: '' };\r\n    authService = AuthService.instance;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let data = this.state;\r\n        data[name] = e.target.value;\r\n        this.setState(data);\r\n    }\r\n\r\n    handleLogin() {\r\n        this.authService.login(this.state.username, this.state.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                MessageBus.emit(AppConstants.MSG_LOGGED_IN, resp);\r\n                this.setState({ redirectToReferrer: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n        const { redirectToReferrer } = this.state;\r\n        if (redirectToReferrer) {\r\n            return <Redirect to={from} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"left-panel\">\r\n                    <div className=\"login-main-text\">\r\n                        <h2>\r\n                            Bug Tracker Lite\r\n                            <br />\r\n                            Login Page\r\n                        </h2>\r\n                        <p>Login from here to access.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <div className=\"login-form\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">User Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"User Name\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.username}\r\n                                    onChange={(e) => this.handleChange('username', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.password}\r\n                                    onChange={(e) => this.handleChange('password', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"button\"\r\n                                    className=\"btnSubmit btn btn-primary\"\r\n                                    value=\"Login\"\r\n                                    onClick={this.handleLogin}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <a href=\"#\" className=\"btnForgetPwd\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"error\">{this.state.error}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../_services/Authservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\nimport Reports from '../Reports/Reports';\r\nimport Users from '../Users/Users';\r\nimport Codes from '../Codes/Codes';\r\nimport Items from '../Items/Items';\r\nimport Login from '../Login/Login';\r\nimport Logout from '../Logout/Logout';\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/logout\" component={Logout} />\r\n\r\n        <PrivateRoute path=\"/kanban\" component={Home} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    ok: true,\r\n                    json: () => Promise.resolve(JSON.stringify(body)),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({ status: 400, json: () => Promise.resolve(JSON.stringify({ message })) });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Router from './Router/Router';\r\nimport { FakeDataLoader } from '../_helpers/fake-data';\r\nimport { InitFakeBackend } from '../_helpers/fake-backend';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        FakeDataLoader();\r\n        InitFakeBackend();\r\n    }\r\n\r\n    render() {\r\n        let appStyle = {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            maxHeight: '100vh',\r\n            minHeight: '100vh',\r\n            display: 'grid',\r\n            gridTemplateRows: 'auto 1fr',\r\n        };\r\n        return (\r\n            <div style={appStyle}>\r\n                <Header />\r\n                <Router />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Main />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}