{"version":3,"sources":["_interfaces/user.js","_interfaces/code.js","_helpers/fake-data.js","appconstants.js","_services/Messagebus.js","config.js","_services/Codeservice.js","_services/Itemservice.js","_store/appstore.js","_store/withappstore.js","components/Header/Header.js","components/Home/Card.js","components/Home/Column.js","components/Home/Selectcode.js","components/Home/Home.js","components/Reports/Reports.js","_services/Userservice.js","components/Users/Users.js","components/Codes/Codes.js","components/Items/Items.js","_services/Authservice.js","components/Login/Login.js","components/Logout/Logout.js","components/Router/Router.js","components/CodeSelector/CodeSelector.js","components/Items/Itemeditor.js","components/Codes/Codeeditor.js","components/Users/Usereditor.js","components/App.js","index.js","_helpers/fake-backend.js"],"names":["ERole","Object","freeze","User","Admin","ECodeType","Board","Project","Priority","Size","Status","Stage","Column","Tag","Team","db","persistDb","localStorage","setItem","JSON","stringify","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","id","username","name","email","password","role","boardcode","FAKE_CODES","codetype","code","description","FAKE_ITEMS","title","disporder","projectcode","prioritycode","sizecode","statuscode","createdbyuser","createdtimestamp","toISOString","assignedtouser","assignedtimestamp","closedbyuser","closedtimestamp","comments","duedate","AppConstants","MSG_LOGGED_IN","MSG_OPEN_MODAL","MSG_REFRESH_DATA","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","singleton","Symbol","singletonEnforcer","CodeService","enforcer","alert","url","config","fetch","method","headers","body","then","response","parse","json","data","requestOptions","this","ItemService","initialstoredata","user","userName","isLoggedIn","items","codes","appstore","observable","BehaviorSubject","itemService","instance","codeService","updateUser","dat","assign","getValue","keys","forEach","key","next","fetchItemsAndCodes","prArray","push","getAll","resp","Promise","all","values","WithAppStore","WrappedComponent","appStore","props","useState","store","setStore","subscription","useEffect","subscribe","target","indexOf","unsubscribe","className","href","exact","to","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Card","state","handleEditClick","item","bind","c","toLowerCase","onClick","e","getCodeClass","Component","data-title","data-target","map","card","i","SelectCode","caption","onChange","options","value","withAppStore","setBoardCode","loading","setLoading","cards","setCards","getCards","getTime","filter","x","getSelectOptions","codeType","handleChange","Reports","columns","selector","sortable","setState","striped","UserService","Users","userService","users","cell","row","ignoreRowClick","allowOverflow","button","parseInt","find","Codes","Items","AuthService","authenticated","CryptoJS","encrypt","toString","authenticate","sessionStorage","err","logout","removeItem","Login","formData","setFormData","error","redirectToReferrer","setRedirectToReferrer","authService","from","location","pathname","htmlFor","type","placeholder","required","minLength","login","Logout","setTimeout","PrivateRoute","component","rest","render","isAuthenticated","Router","path","Home","CodeSelector","style","width","marginRight","ItemEditor","model","modalShow","display","openModal","closeModal","handleSave","updateItem","aria-hidden","tabIndex","data-dismiss","aria-label","rows","CodeEditor","codeTypes","handleSubmit","updateCode","UserEditor","roles","App","margin","maxHeight","minHeight","gridTemplateRows","str","getItem","Boolean","FakeDataLoader","realFetch","window","opts","resolve","reject","doUpdate","dtype","fld","ok","doInsert","doGetAll","status","includes","endsWith","a","decrypt","Utf8","split","undefined","message","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","InitFakeBackend","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d8d6c0f.chunk.js","sourcesContent":["export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n    MSG_OPEN_MODAL: 102,\r\n    MSG_REFRESH_DATA: 103,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst MessageBus = {\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\n    off: (event, fn) => eventEmitter.off(event, fn),\n    emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(MessageBus);\n\nexport default MessageBus;\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n\r\n    insertItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport CodeService from '../_services/Codeservice';\r\nimport ItemService from '../_services/Itemservice';\r\n\r\nconst initialstoredata = {\r\n    user: {\r\n        userName: 'Ron deBoer',\r\n        isLoggedIn: false,\r\n    },\r\n    items: [],\r\n    codes: [],\r\n};\r\nclass AppStore {\r\n    observable = new BehaviorSubject(initialstoredata);\r\n    itemService = ItemService.instance;\r\n    codeService = CodeService.instance;\r\n\r\n    updateUser = (data) => {\r\n        let dat = Object.assign({}, this.observable.getValue());\r\n        Object.keys(data).forEach((key) => {\r\n            dat.user[key] = data[key];\r\n        });\r\n        this.observable.next(dat);\r\n    };\r\n\r\n    fetchItemsAndCodes = () => {\r\n        let prArray = [];\r\n        prArray.push(\r\n            this.itemService.getAll().then((resp) => {\r\n                return resp;\r\n            })\r\n        );\r\n        prArray.push(\r\n            this.codeService.getAll().then((resp) => {\r\n                return resp;\r\n            })\r\n        );\r\n        Promise.all(prArray).then((values) => {\r\n            let dat = Object.assign({}, this.observable.getValue());\r\n            dat.items = values[0];\r\n            dat.codes = values[1];\r\n            this.observable.next(dat);\r\n        });\r\n    };\r\n}\r\nconst appstore = new AppStore();\r\nexport { appstore, initialstoredata };\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppConstants from '../appconstants';\r\nimport MessageBus from '../_services/Messagebus';\r\nimport { appstore, initialstoredata } from './appstore';\r\n\r\nconst WithAppStore = (WrappedComponent) => {\r\n    return function WithAppStoreComponent({ appStore, ...props }) {\r\n        const [store, setStore] = useState(initialstoredata);\r\n        let subscription = null;\r\n\r\n        useEffect(() => {\r\n            subscription = appstore.observable.subscribe((data) => {\r\n                setStore(data);\r\n            });\r\n            appstore.fetchItemsAndCodes();\r\n            MessageBus.listenFor(AppConstants.MSG_REFRESH_DATA, (payload) => {\r\n                if (payload.target.indexOf('home') > -1) {\r\n                    appstore.fetchItemsAndCodes();\r\n                }\r\n            });\r\n            return () => {\r\n                subscription.unsubscribe();\r\n            };\r\n        }, []);\r\n\r\n        return <WrappedComponent appStore={store} {...props} />;\r\n    };\r\n};\r\n\r\nexport default WithAppStore;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport WithAppStore from '../../_store/withappstore';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = (props) => {\r\n    if (!props.appStore.user.isLoggedIn) {\r\n        return null;\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n            <a href=\"#\" className=\"navbar-brand appname\">\r\n                Bug Tracker Lite\r\n            </a>\r\n            <div className=\"title\">\r\n                <div className=\"title-left\"></div>\r\n                <div className=\"title-center\">{props.appStore.user.userName}</div>\r\n                <div className=\"title-right\"></div>\r\n            </div>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/\" className=\"nav-link\">\r\n                            Kanban\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a\r\n                            className=\"nav-link dropdown-toggle\"\r\n                            href=\"#\"\r\n                            id=\"adminDropdown\"\r\n                            role=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded=\"false\"\r\n                        >\r\n                            Admin\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                            <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                Users\r\n                            </NavLink>\r\n                            <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                Codes\r\n                            </NavLink>\r\n                            <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                Items\r\n                            </NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                            Reports\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                            Logout\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default WithAppStore(Header);\r\n","import React, { Component } from 'react';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Card extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleEditClick = () => {\r\n        const payload = {\r\n            target: 'itemeditor',\r\n            data: this.props.item,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    getCodeClass(codetype, code) {\r\n        const c = code.toLowerCase();\r\n        if (codetype === 'size') {\r\n            if (c === 'large') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (codetype !== 'status') {\r\n            if (c === 'high') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (c === 'open') {\r\n            return 'badge-danger';\r\n        }\r\n        if (c !== 'closed') {\r\n            return 'badge-warning';\r\n        }\r\n        return 'badge-success';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-card\">\r\n                <div className=\"item-card-body\">\r\n                    <div className=\"item-card-header\">\r\n                        <div className=\"title\">\r\n                            <span className=\"id\">({this.props.item.id})</span> {this.props.item.title}\r\n                        </div>\r\n                        <div className=\"handle\">\r\n                            <button\r\n                                className=\"btn-edit\"\r\n                                onClick={(e) => {\r\n                                    this.handleEditClick();\r\n                                }}\r\n                            >\r\n                                <span className=\"icon\">...</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-card-text\">\r\n                        <div className=\"codes\">\r\n                            <div className=\"code\">\r\n                                Project\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-info`}>\r\n                                    {' '}\r\n                                    {this.props.item.projectcode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Priority\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'priority',\r\n                                        this.props.item.projectcode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.prioritycode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Size\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'size',\r\n                                        this.props.item.sizecode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.sizecode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Status\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'status',\r\n                                        this.props.item.statuscode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.statuscode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Assigned\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-primary`}>\r\n                                    {this.props.item.assignedtouser}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nclass Column extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"column\">\r\n                <div className=\"header\">\r\n                    <div className=\"title\">{this.props.title} Items</div>\r\n                    <button className=\"btn-edit\" data-title=\"Edit\" data-toggle=\"modal\" data-target=\"#edit\">\r\n                        <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                    </button>\r\n                </div>\r\n                <ul className=\"open-items items\">\r\n                    {this.props.items.map((card, i) => (\r\n                        <li key={card.id}>\r\n                            <Card item={card} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column;\r\n","import React, { Component } from 'react';\r\n\r\nclass SelectCode extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"selectcode\">\r\n                <span className=\"text\">{this.props.caption}</span>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm dropdown\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectCode;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport Column from './Column';\r\nimport SelectCode from './Selectcode';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\nimport withAppStore from '../../_store/withappstore';\r\n\r\nimport './home.scss';\r\nimport './card.scss';\r\n\r\nconst Home = (props) => {\r\n    const [boardcode, setBoardCode] = useState('Dev');\r\n    const [loading, setLoading] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    // didMount\r\n    useEffect(() => {\r\n        getCards(boardcode);\r\n        setLoading(new Date().getTime());\r\n    }, []);\r\n\r\n    // onUpdate\r\n    useEffect(() => {\r\n        getCards(boardcode);\r\n        setLoading(new Date().getTime());\r\n    }, [props.appStore.codes, props.appStore.items]);\r\n\r\n    const getCards = (boardcode) => {\r\n        setCards(props.appStore.items.filter((x) => x.boardcode === boardcode));\r\n    };\r\n\r\n    const getSelectOptions = (key, codeType) => {\r\n        return props.appStore.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    };\r\n\r\n    const handleChange = (name, e) => {\r\n        if (name == 'boardcode') {\r\n            setBoardCode(e.target.value);\r\n            getCards(e.target.value);\r\n        }\r\n    };\r\n\r\n    if (loading === false) {\r\n        return <h4>Loading...</h4>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <form>\r\n                <div className=\"header\">\r\n                    <div className=\"title\">\r\n                        Kanban Board - <span className=\"boardcode\">{boardcode}</span>\r\n                    </div>\r\n                    <SelectCode\r\n                        caption=\"Kanban Board\"\r\n                        name=\"boardcode\"\r\n                        options={getSelectOptions('id', 'BOARD')}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <SelectCode\r\n                        caption=\"Project\"\r\n                        name=\"projectcode\"\r\n                        options={getSelectOptions('id', 'PROJECT')}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"main\">\r\n                <Column title=\"Open\" items={cards.filter((x) => x.statuscode === 'Open')} />\r\n                <Column title=\"Assigned\" items={cards.filter((x) => x.statuscode === 'Assigned')} />\r\n                <Column title=\"In Review\" items={cards.filter((x) => x.statuscode === 'Review')} />\r\n                <Column title=\"Closed\" items={cards.filter((x) => x.statuscode === 'Closed')} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAppStore(Home);\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../../_services/Userservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './users.scss';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const user = this.users.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'usereditor',\r\n            data: user,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"users-table\">\r\n                <h5>Users</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../../_services/Codeservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './codes.scss';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const code = this.codes.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'codeeditor',\r\n            data: code,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"codes-table\">\r\n                <h5>Codes</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.codes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './items.scss';\r\n\r\nclass Items extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        item: null,\r\n        loading: true,\r\n    };\r\n    items = [];\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const item = this.items.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'itemeditor',\r\n            data: item,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"items-table\">\r\n                <h5>Items</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = user;\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from '../../_services/Authservice';\r\nimport { appstore } from '../../_store/appstore';\r\n\r\nimport './login.scss';\r\n\r\nconst Login = (props) => {\r\n    const [formData, setFormData] = useState({ username: 'admin', password: 'admin' });\r\n    const [error, setError] = useState('');\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n    const authService = AuthService.instance;\r\n\r\n    const handleChange = (name, e) => {\r\n        let dat = formData;\r\n        dat[name] = e.target.value;\r\n        setFormData(dat);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        authService.login(formData.username, formData.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                appstore.updateUser({\r\n                    userName: formData.username,\r\n                    isLoggedIn: true,\r\n                });\r\n                setRedirectToReferrer(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const { from } = props.location.state || { from: { pathname: '/' } };\r\n    if (redirectToReferrer) {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"left-panel\">\r\n                <div className=\"login-main-text\">\r\n                    <h2>\r\n                        Bug Tracker Lite\r\n                        <br />\r\n                        Login Page\r\n                    </h2>\r\n                    <p>Login from here to access.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <div className=\"login-form\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">User Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"User Name\"\r\n                                required\r\n                                minLength=\"2\"\r\n                                value={formData.username}\r\n                                onChange={(e) => handleChange('username', e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"\"\r\n                                required\r\n                                minLength=\"2\"\r\n                                value={formData.password}\r\n                                onChange={(e) => handleChange('password', e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"button\"\r\n                                className=\"btnSubmit btn btn-primary\"\r\n                                value=\"Login\"\r\n                                onClick={handleLogin}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <a href=\"#\" className=\"btnForgetPwd\">\r\n                                Forgot Password?\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"error\">{error}</div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../_services/Authservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\nimport Reports from '../Reports/Reports';\r\nimport Users from '../Users/Users';\r\nimport Codes from '../Codes/Codes';\r\nimport Items from '../Items/Items';\r\nimport Login from '../Login/Login';\r\nimport Logout from '../Logout/Logout';\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\n\r\nclass CodeSelector extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        let cmpStyle = {\r\n            width: 'auto',\r\n            marginRight: '5px',\r\n        };\r\n        return (\r\n            <div style={cmpStyle}>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeSelector;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport CodeSelector from '../CodeSelector/CodeSelector';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './itemeditor.scss';\r\n\r\nclass ItemEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codes = [];\r\n    users = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'itemeditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = resp;\r\n        });\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = resp;\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            return this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n        }\r\n        return this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.state.itemService.updateItem(this.state.model);\r\n        const payload = {\r\n            target: 'home,items',\r\n            data: this.state.model,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_REFRESH_DATA, payload);\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.model) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Item {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Title\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                value={this.state.model.title}\r\n                                                onChange={(e) => this.handleChange('title', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"description\">\r\n                                                Description\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                required\r\n                                                minLength=\"4\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"controlrow\">\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Kanban Board</div>\r\n                                                <CodeSelector\r\n                                                    name=\"boardcode\"\r\n                                                    value={this.state.model.boardcode}\r\n                                                    options={this.getSelectOptions('id', 'BOARD')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Project</div>\r\n                                                <CodeSelector\r\n                                                    name=\"projectcode\"\r\n                                                    value={this.state.model.projectcode}\r\n                                                    options={this.getSelectOptions('id', 'PROJECT')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Priority</div>\r\n                                                <CodeSelector\r\n                                                    name=\"prioritycode\"\r\n                                                    value={this.state.model.prioritycode}\r\n                                                    options={this.getSelectOptions('id', 'PRIORITY')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Size</div>\r\n                                                <CodeSelector\r\n                                                    name=\"sizecode\"\r\n                                                    value={this.state.model.sizecode}\r\n                                                    options={this.getSelectOptions('id', 'SIZE')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Status</div>\r\n                                                <CodeSelector\r\n                                                    name=\"statuscode\"\r\n                                                    value={this.state.model.statuscode}\r\n                                                    options={this.getSelectOptions('id', 'STATUS')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Assigned To</div>\r\n                                                <CodeSelector\r\n                                                    name=\"assignedtouser\"\r\n                                                    value={this.state.model.assignedtouser}\r\n                                                    options={this.getSelectOptions('id', 'ASSIGNED')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"comments\">\r\n                                                Comments\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"comments\"\r\n                                                name=\"comments\"\r\n                                                value={this.state.model.comments}\r\n                                                onChange={(e) => this.handleChange('comments', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport { ECodeType } from '../../_interfaces/code';\r\n\r\nimport './codeeditor.scss';\r\n\r\nclass CodeEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codeTypes = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'codeeditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n        this.codeTypes = Object.values(ECodeType);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            return this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n        }\r\n        return this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.state.codeService.updateCode(this.state.model);\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (!this.state.model) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Code {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code Type\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"codetype\"\r\n                                                name=\"codetype\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('codetype', e)}\r\n                                            >\r\n                                                {this.codeTypes.map((c) => (\r\n                                                    <option key={c} value={c}>\r\n                                                        {c}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"code\"\r\n                                                name=\"code\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('code', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Description\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './usereditor.scss';\r\n\r\nclass UserEditor extends Component {\r\n    state = {\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    roles = ['admin', 'user'];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'usereditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.state.userService.updateUser(this.state.model);\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (this.state.model === null) {\r\n            return false;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit User {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"username\">\r\n                                                User Name\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"username\"\r\n                                                name=\"username\"\r\n                                                value={this.state.model.username}\r\n                                                onChange={(e) => this.handleChange('username', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"name\">\r\n                                                Full Name\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"name\"\r\n                                                name=\"name\"\r\n                                                value={this.state.model.name}\r\n                                                onChange={(e) => this.handleChange('name', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"email\">\r\n                                                Email\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                                value={this.state.model.email}\r\n                                                onChange={(e) => this.handleChange('email', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"role\">\r\n                                                Role\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"role\"\r\n                                                name=\"role\"\r\n                                                value={this.state.model.role}\r\n                                                onChange={(e) => this.handleChange('role', e)}\r\n                                            >\r\n                                                {this.roles.map((c) => (\r\n                                                    <option key={c} value={c}>\r\n                                                        {c}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEditor;\r\n","import React from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Router from './Router/Router';\r\nimport ItemEditor from './Items/Itemeditor';\r\nimport CodeEditor from './Codes/Codeeditor';\r\nimport UserEditor from './Users/Usereditor';\r\n\r\nconst App = (props) => {\r\n    let appStyle = {\r\n        width: '80%',\r\n        margin: 'auto',\r\n        maxHeight: '100vh',\r\n        minHeight: '100vh',\r\n        display: 'grid',\r\n        gridTemplateRows: 'auto 1fr',\r\n    };\r\n    return (\r\n        <div style={appStyle}>\r\n            <Header />\r\n            <Router />\r\n            <ItemEditor />\r\n            <CodeEditor />\r\n            <UserEditor />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { FakeDataLoader } from './_helpers/fake-data';\r\nimport { InitFakeBackend } from './_helpers/fake-backend';\r\n\r\nimport App from './components/App';\r\n\r\nimport './index.scss';\r\n\r\nFakeDataLoader();\r\nInitFakeBackend();\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    status: 200,\r\n                    json: () => JSON.stringify(body),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => JSON.stringify({ message: 'Unauthorized' }),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({\r\n                    status: 400,\r\n                    json: () => JSON.stringify({ message }),\r\n                });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n"],"sourceRoot":""}