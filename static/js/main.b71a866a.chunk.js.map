{"version":3,"sources":["_directives/jsxif.js","appconstants.js","_services/Messagebus.js","components/Header.js","config.js","_services/Userservice.js","components/Home.js","_services/Authservice.js","components/Login.js","components/Logout.js","_services/Itemservice.js","components/Kanban.js","components/Reports.js","components/Users.js","_services/Codeservice.js","components/Codes.js","components/Items.js","components/Router.js","_interfaces/user.js","_interfaces/code.js","_helpers/fake-data.js","_helpers/fake-backend.js","components/Main.js","index.js"],"names":["JsxIf","cond","children","el","AppConstants","MSG_LOGGED_IN","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","Object","freeze","Header","state","isLoggedIn","user","name","data","setState","className","href","this","id","exact","to","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","singleton","Symbol","singletonEnforcer","UserService","enforcer","alert","url","config","fetch","method","headers","body","then","response","json","requestOptions","JSON","stringify","Home","userService","instance","loading","users","columns","selector","sortable","getAll","resp","parse","AuthService","authenticated","username","password","dat","CryptoJS","encrypt","toString","authenticate","sessionStorage","setItem","err","logout","removeItem","Login","props","redirectToReferrer","error","authService","handleLogin","bind","e","target","value","login","from","location","pathname","htmlFor","type","placeholder","required","minLength","onChange","handleChange","onClick","Logout","setTimeout","ItemService","Reports","itemService","items","console","table","Users","CodeService","Codes","codeService","codes","Items","PrivateRoute","component","rest","render","isAuthenticated","Router","path","ERole","User","Admin","ECodeType","Board","Project","Priority","Size","Status","Stage","Column","Tag","Team","db","persistDb","localStorage","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","email","boardcode","FAKE_CODES","codetype","code","description","FAKE_ITEMS","title","disporder","projectcode","prioritycode","sizecode","statuscode","createdbyuser","createdtimestamp","toISOString","assignedtouser","assignedtimestamp","closedbyuser","closedtimestamp","comments","duedate","FakeDataLoader","str","getItem","Boolean","item","InitFakeBackend","realFetch","window","opts","Promise","resolve","reject","doUpdate","dtype","row","find","x","keys","forEach","fld","ok","doInsert","push","doGetAll","includes","endsWith","a","decrypt","Utf8","split","undefined","message","status","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b71a866a.chunk.js","sourcesContent":["import React from 'react';\r\nexport default function JsxIf({ cond, ...props }) {\r\n    const { children } = props;\r\n    let el = null;\r\n    if (cond) {\r\n        el = <>{children}</>;\r\n    }\r\n    return el;\r\n}\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst MessageBus = {\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\n    off: (event, fn) => eventEmitter.off(event, fn),\n    emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(MessageBus);\n\nexport default MessageBus;\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport JsxIf from '../_directives/jsxif';\r\nimport AppConstants from '../appconstants';\r\nimport MessageBus from '../_services/Messagebus';\r\n\r\nclass Header extends Component {\r\n    state = { isLoggedIn: false, user: { name: '' } };\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_LOGGED_IN, (data) => {\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n                <a href=\"#\" className=\"navbar-brand\">\r\n                    Bug Tracker Lite\r\n                </a>\r\n                <div className=\"title\">\r\n                    <div className=\"title-left\"></div>\r\n                    <div className=\"title-center\">{this.state.user.name}</div>\r\n                    <div className=\"title-right\"></div>\r\n                </div>\r\n                <JsxIf cond={this.state.isLoggedIn}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/kanban\" className=\"nav-link\">\r\n                                    Kanban\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"adminDropdown\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    Admin\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                                    <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                        Users\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                        Codes\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                        Items\r\n                                    </NavLink>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                                    Reports\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </JsxIf>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return response.json();\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../_services/Userservice';\r\n\r\nclass Home extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Kanban</h5>\r\n                <DataTable columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = JSON.parse(user);\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppConstants from '../appconstants';\r\nimport MessageBus from '../_services/Messagebus';\r\n\r\nimport AuthService from '../_services/Authservice';\r\nimport Home from './Home';\r\n\r\nclass Login extends Component {\r\n    state = { redirectToReferrer: false, username: 'admin', password: 'admin', error: '' };\r\n    authService = AuthService.instance;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let data = this.state;\r\n        data[name] = e.target.value;\r\n        this.setState(data);\r\n    }\r\n\r\n    handleLogin() {\r\n        this.authService.login(this.state.username, this.state.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                MessageBus.emit(AppConstants.MSG_LOGGED_IN, resp);\r\n                this.setState({ redirectToReferrer: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n        const { redirectToReferrer } = this.state;\r\n        if (redirectToReferrer) {\r\n            return <Redirect to={from} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"left-panel\">\r\n                    <div className=\"login-main-text\">\r\n                        <h2>\r\n                            Bug Tracker Lite\r\n                            <br />\r\n                            Login Page\r\n                        </h2>\r\n                        <p>Login from here to access.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <div className=\"login-form\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">User Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"User Name\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.username}\r\n                                    onChange={(e) => this.handleChange('username', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.password}\r\n                                    onChange={(e) => this.handleChange('password', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"button\"\r\n                                    className=\"btnSubmit btn btn-primary\"\r\n                                    value=\"Login\"\r\n                                    onClick={this.handleLogin}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <a href=\"#\" className=\"btnForgetPwd\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"error\">{this.state.error}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../_services/Authservice';\r\nimport AppConstants from '../appconstants';\r\nimport MessageBus from '../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import React, { Component } from 'react';\r\n\r\nclass Kanban extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>KANBAN</h2>\r\n                <p>\r\n                    Cras facilisis urna ornare ex volutpat, et convallis erat elementum. Ut aliquam, ipsum\r\n                    vitae gravida suscipit, metus dui bibendum est, eget rhoncus nibh metus nec massa.\r\n                    Maecenas hendrerit laoreet augue nec molestie. Cum sociis natoque penatibus et magnis dis\r\n                    parturient montes, nascetur ridiculus mus.\r\n                </p>\r\n\r\n                <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Kanban;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            console.table(this.items);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../_services/Userservice';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Users</h5>\r\n                <DataTable columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../_services/Codeservice';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n            console.table(this.codes);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Codes</h5>\r\n                <DataTable columns={this.columns} data={this.codes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../_services/Itemservice';\r\n\r\nclass Items extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            console.table(this.items);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Items</h5>\r\n                <DataTable columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Main from './Main';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\nimport Kanban from './Kanban';\r\nimport Reports from './Reports';\r\nimport Users from './Users';\r\nimport Codes from './Codes';\r\nimport Items from './Items';\r\nimport AuthService from '../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/logout\" component={Logout} />\r\n\r\n        <PrivateRoute path=\"/kanban\" component={Home} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    ok: true,\r\n                    json: () => Promise.resolve(JSON.stringify(body)),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({ status: 400, json: () => Promise.resolve(JSON.stringify({ message })) });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\n\r\nimport Router from './Router';\r\nimport { FakeDataLoader } from '../_helpers/fake-data';\r\nimport { InitFakeBackend } from '../_helpers/fake-backend';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        FakeDataLoader();\r\n        InitFakeBackend();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header />\r\n                <Router />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Main />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}