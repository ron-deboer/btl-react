{"version":3,"sources":["_directives/jsxif.js","appconstants.js","_services/Messagebus.js","components/Header/Header.js","config.js","_services/Itemservice.js","_services/Codeservice.js","components/Home/Card.js","components/Home/Column.js","components/Home/Selectcode.js","components/Home/Home.js","components/Reports/Reports.js","_services/Userservice.js","components/Users/Users.js","components/Codes/Codes.js","components/CodeSelector/CodeSelector.js","components/Items/Itemeditor.js","components/Items/Items.js","_services/Authservice.js","components/Login/Login.js","components/Logout/Logout.js","components/Router/Router.js","_interfaces/user.js","_interfaces/code.js","_helpers/fake-data.js","_helpers/fake-backend.js","components/Main.js","index.js"],"names":["JsxIf","cond","children","el","AppConstants","MSG_LOGGED_IN","MSG_OPEN_MODAL","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","Object","freeze","Header","state","isLoggedIn","user","name","data","setState","className","href","this","id","exact","to","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","singleton","Symbol","singletonEnforcer","ItemService","enforcer","alert","url","config","fetch","method","headers","body","then","response","json","requestOptions","JSON","stringify","CodeService","Card","codetype","code","c","toLowerCase","props","item","title","data-title","data-target","projectcode","getCodeClass","prioritycode","sizecode","statuscode","assignedtouser","Column","items","map","card","i","SelectCode","caption","onChange","e","options","value","key","Home","itemService","instance","codeService","loading","boardcode","cards","codes","handleChange","getCards","target","prArray","push","getAll","resp","parse","Promise","all","values","filter","x","codeType","getSelectOptions","Reports","columns","selector","sortable","striped","UserService","Users","userService","users","Codes","CodeSelector","style","width","marginRight","ItemEditor","model","modalShow","display","_modal","handleSubmit","bind","openModal","closeModal","handleSave","aria-hidden","tabIndex","type","data-dismiss","aria-label","onClick","htmlFor","rows","required","minLength","description","comments","Items","showModal","cell","row","handleEditClick","ignoreRowClick","allowOverflow","button","parseInt","find","edit","console","log","AuthService","authenticated","username","password","dat","CryptoJS","encrypt","toString","authenticate","sessionStorage","setItem","err","logout","removeItem","Login","redirectToReferrer","error","authService","handleLogin","login","from","location","pathname","placeholder","Logout","setTimeout","PrivateRoute","component","rest","render","isAuthenticated","Router","path","ERole","User","Admin","ECodeType","Board","Project","Priority","Size","Status","Stage","Tag","Team","db","persistDb","localStorage","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","email","FAKE_CODES","FAKE_ITEMS","disporder","createdbyuser","createdtimestamp","toISOString","assignedtimestamp","closedbyuser","closedtimestamp","duedate","FakeDataLoader","str","getItem","Boolean","InitFakeBackend","realFetch","window","opts","resolve","reject","doUpdate","dtype","keys","forEach","fld","ok","doInsert","doGetAll","includes","endsWith","a","decrypt","Utf8","split","undefined","message","status","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","Main","margin","maxHeight","minHeight","gridTemplateRows","ReactDOM","document","getElementById"],"mappings":"ufACe,SAASA,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,KACpBC,EADsC,wBACtCA,SACJC,EAAK,KAIT,OAHIF,IACAE,EAAK,mCAAGD,KAELC,ECPX,IAIeC,EAJM,CACjBC,cAAe,IACfC,eAAgB,K,SCAdC,EAAe,I,OAAIC,GAEnBC,EAAa,CACfC,UAAW,SAACC,EAAOC,GAAR,OAAeL,EAAaM,GAAGF,EAAOC,IACjDE,WAAY,SAACH,EAAOC,GAAR,OAAeL,EAAaQ,KAAKJ,EAAOC,IACpDI,IAAK,SAACL,EAAOC,GAAR,OAAeL,EAAaS,IAAIL,EAAOC,IAC5CK,KAAM,SAACN,EAAOO,GAAR,OAAoBX,EAAaU,KAAKN,EAAOO,KAGvDC,OAAOC,OAAOX,GAECA,QC+DAY,E,4MArEXC,MAAQ,CAAEC,YAAY,EAAOC,KAAM,CAAEC,KAAM,K,uDAE3C,WAAqB,IAAD,OAChBhB,EAAWC,UAAUN,EAAaC,eAAe,SAACqB,GAC9C,EAAKC,SAASD,Q,oBAItB,WACI,OACI,sBAAKE,UAAU,gDAAf,UACI,mBAAGC,KAAK,IAAID,UAAU,eAAtB,8BAGA,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eAAf,SAA+BE,KAAKR,MAAME,KAAKC,OAC/C,qBAAKG,UAAU,mBAEnB,cAAC5B,EAAD,CAAOC,KAAM6B,KAAKR,MAAMC,WAAxB,SACI,qBAAKK,UAAU,2BAA2BG,GAAG,kBAA7C,SACI,qBAAIH,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,UAAUL,UAAU,WAAtC,sBAIJ,qBAAIA,UAAU,oBAAd,UACI,mBACIA,UAAU,2BACVC,KAAK,IACLE,GAAG,gBACHG,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,QAPlB,mBAWA,sBAAKT,UAAU,gBAAgBU,kBAAgB,gBAA/C,UACI,cAAC,IAAD,CAASN,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,mBAGA,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,mBAGA,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,SAASL,UAAU,gBAArC,yBAKR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,WAAWL,UAAU,WAAvC,uBAIJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,UAAUL,UAAU,WAAtC,oC,GA1DXW,a,eCNN,EACH,4BCCNC,EAAYC,SACZC,EAAoBD,SA6CXE,E,WAzCX,WAAYC,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBAlClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAIG,EAAYD,IAE/BZ,KAAKU,O,KCZdA,EAAYC,SACZC,EAAoBD,SA6CXiB,E,WAzCX,WAAYd,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBAlClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAIkB,EAAYhB,IAE/BZ,KAAKU,O,KCsGLmB,E,4MAjHXrC,MAAQ,G,uDAER,c,0BAEA,SAAasC,EAAUC,GACnB,IAAMC,EAAID,EAAKE,cACf,MAAiB,SAAbH,EACU,UAANE,EACO,eAED,WAANA,EACO,gBAEJ,gBAEM,WAAbF,EACU,SAANE,EACO,eAED,WAANA,EACO,gBAEJ,gBAED,SAANA,EACO,eAED,WAANA,EACO,gBAEJ,kB,oBAGX,WACI,OACI,qBAAKlC,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAMA,UAAU,KAAhB,cAAuBE,KAAKkC,MAAMC,KAAKlC,GAAvC,OADJ,IACwDD,KAAKkC,MAAMC,KAAKC,SAExE,qBAAKtC,UAAU,SAAf,SACI,wBACIA,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,sBAAMxC,UAAU,OAAhB,wBAIZ,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,oBAEI,uBACA,uBAAMA,UAAS,8BAAf,UACK,IACAE,KAAKkC,MAAMC,KAAKI,kBAGzB,sBAAKzC,UAAU,OAAf,qBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,WACAxC,KAAKkC,MAAMC,KAAKI,cAHxB,SAMKvC,KAAKkC,MAAMC,KAAKM,kBAGzB,sBAAK3C,UAAU,OAAf,iBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,OACAxC,KAAKkC,MAAMC,KAAKO,WAHxB,SAMK1C,KAAKkC,MAAMC,KAAKO,cAGzB,sBAAK5C,UAAU,OAAf,mBAEI,uBACA,sBACIA,UAAS,2BAAsBE,KAAKwC,aAChC,SACAxC,KAAKkC,MAAMC,KAAKQ,aAHxB,SAMK3C,KAAKkC,MAAMC,KAAKQ,gBAGzB,sBAAK7C,UAAU,OAAf,qBAEI,uBACA,sBAAMA,UAAS,iCAAf,SACKE,KAAKkC,MAAMC,KAAKS,kC,GAvGlCnC,aCmCJoC,E,4MAhCXrD,MAAQ,G,uDAER,c,oBAEA,WACI,OACI,sBAAKM,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UAAwBE,KAAKkC,MAAME,MAAnC,YACA,8BACI,wBACItC,UAAU,WACVuC,aAAW,OACXhC,cAAY,QACZiC,cAAY,QAJhB,SAMI,mBAAGxC,UAAU,iCAIzB,oBAAIA,UAAU,mBAAd,SACKE,KAAKkC,MAAMY,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAClB,6BACI,cAAC,EAAD,CAAMd,KAAMa,KADPA,EAAK/C,gB,GAvBjBQ,aCwBNyC,E,4MAzBX1D,MAAQ,G,uDAER,c,oBAEA,WAAU,IAAD,OACL,OACI,sBAAKM,UAAU,SAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBE,KAAKkC,MAAMiB,UACnC,wBACIrD,UAAU,+CACVG,GAAID,KAAKkC,MAAMvC,KACfA,KAAMK,KAAKkC,MAAMvC,KACjByD,SAAU,SAACC,GAAD,OAAO,EAAKnB,MAAMkB,SAAS,EAAKlB,MAAMvC,KAAM0D,IAJ1D,SAMKrD,KAAKkC,MAAMoB,QAAQP,KAAI,SAACf,GAAD,OACpB,wBAAoBuB,MAAOvB,EAAED,KAA7B,SACKC,EAAED,MADMC,EAAEwB,iB,GAhBd/C,aC0FVgD,E,4MAnFXjE,MAAQ,CACJkE,YAAa7C,EAAY8C,SACzBC,YAAahC,EAAY+B,SACzBE,SAAS,EACTC,UAAW,O,EAEfhB,MAAQ,G,EACRiB,MAAQ,G,EACRC,MAAQ,G,EAmCRC,aAAe,SAACtE,EAAM0D,GAClB,EAAKa,SAASb,EAAEc,OAAOZ,OACvB,EAAK1D,SAAS,CAAEiE,UAAWT,EAAEc,OAAOZ,S,uDAnCxC,WAAqB,IAAD,OACZa,EAAU,GACdA,EAAQC,KACJrE,KAAKR,MAAMkE,YAAYY,SAAShD,MAAK,SAACiD,GAClC,EAAKzB,MAAQpB,KAAK8C,MAAMD,OAGhCH,EAAQC,KACJrE,KAAKR,MAAMoE,YAAYU,SAAShD,MAAK,SAACiD,GAClC,EAAKP,MAAQtC,KAAK8C,MAAMD,OAGhCE,QAAQC,IAAIN,GAAS9C,MAAK,SAACqD,GACvB,EAAKT,SAAS,EAAK1E,MAAMsE,WACzB,EAAKjE,SAAS,CAAEgE,SAAS,S,sBAIjC,SAASC,GACL9D,KAAK+D,MAAQ/D,KAAK8C,MAAM8B,QAAO,SAACC,GAAD,OAAOA,EAAEf,YAAcA,O,8BAG1D,SAAiBN,EAAKsB,GAClB,OAAO9E,KAAKgE,MACPY,QAAO,SAACC,GAAD,OAAOA,EAAE/C,WAAagD,KAC7B/B,KAAI,SAAC8B,GACF,MAAO,CACHrB,IAAKsB,EAAW,IAAMD,EAAE5E,GACxB8B,KAAM8C,EAAE9C,W,oBAUxB,WACI,OACI,sBAAKjC,UAAU,iBAAf,UACI,+BACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SACI,iDACmB,sBAAMA,UAAU,YAAhB,SAA6BE,KAAKR,MAAMsE,iBAG/D,cAAC,EAAD,CACIX,QAAQ,eACRxD,KAAK,YACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,SACrC3B,SAAUpD,KAAKiE,eAEnB,cAAC,EAAD,CACId,QAAQ,UACRxD,KAAK,cACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,WACrC3B,SAAUpD,KAAKiE,oBAI3B,sBAAKnE,UAAU,OAAf,UACI,cAAC,EAAD,CAAQsC,MAAM,OAAOU,MAAO9C,KAAK+D,MAAMa,QAAO,SAACC,GAAD,MAAwB,SAAjBA,EAAElC,gBACvD,cAAC,EAAD,CAAQP,MAAM,WAAWU,MAAO9C,KAAK+D,MAAMa,QAAO,SAACC,GAAD,MAAwB,aAAjBA,EAAElC,gBAC3D,cAAC,EAAD,CAAQP,MAAM,YAAYU,MAAO9C,KAAK+D,MAAMa,QAAO,SAACC,GAAD,MAAwB,WAAjBA,EAAElC,gBAC5D,cAAC,EAAD,CAAQP,MAAM,SAASU,MAAO9C,KAAK+D,MAAMa,QAAO,SAACC,GAAD,MAAwB,WAAjBA,EAAElC,0B,GA7E1DlC,a,iBCsDJuE,E,4MAxDXxF,MAAQ,CAAEkE,YAAa7C,EAAY8C,SAAUE,SAAS,G,EACtDf,MAAQ,G,EACRmC,QAAU,CACN,CACItF,KAAM,KACNuF,SAAU,KACVC,UAAU,GAEd,CACIxF,KAAM,QACNuF,SAAU,QACVC,UAAU,GAEd,CACIxF,KAAM,aACNuF,SAAU,YACVC,UAAU,GAEd,CACIxF,KAAM,OACNuF,SAAU,WACVC,UAAU,GAEd,CACIxF,KAAM,SACNuF,SAAU,aACVC,UAAU,GAEd,CACIxF,KAAM,cACNuF,SAAU,iBACVC,UAAU,GAEd,CACIxF,KAAM,eACNuF,SAAU,cACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChBnF,KAAKR,MAAMkE,YAAYY,SAAShD,MAAK,SAACiD,GAClC,EAAKzB,MAAQpB,KAAK8C,MAAMD,GACxB,EAAK1E,SAAS,CAAEgE,SAAS,S,oBAIjC,WACI,OACI,gCACI,yCACA,cAAC,IAAD,CAAWuB,QAAQ,OAAOH,QAASjF,KAAKiF,QAASrF,KAAMI,KAAK8C,e,GAnDtDrC,aCHhBC,EAAYC,SACZC,EAAoBD,SAyDX0E,E,WArDX,WAAYvE,GAAW,oBACfA,IAAaF,GAAmBG,MAAM,8B,0CAS9C,WACI,IAKMC,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EANU,CACnBG,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OAGwBC,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,0BAGlE,SAAa5B,GACT,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,sBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GACpC,OAAOA,EAASC,Y,wBAIxB,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,wBAGlE,SAAW5B,GACP,IAAM6B,EAAiB,CACnBN,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMK,KAAKC,UAAU/B,IAEnBoB,EAAG,UAAMC,EAAN,gBACT,OAAOC,MAAMF,EAAKS,GAAgBH,MAAK,SAACC,GAAD,OAAcA,EAASC,a,qBA9ClE,WAII,OAHKxB,KAAKU,KACNV,KAAKU,GAAa,IAAI2E,EAAYzE,IAE/BZ,KAAKU,O,KCsCL4E,E,4MA9CX9F,MAAQ,CAAE+F,YAAaF,EAAY1B,SAAUE,SAAS,G,EACtD2B,MAAQ,G,EACRP,QAAU,CACN,CACItF,KAAM,KACNuF,SAAU,KACVC,UAAU,GAEd,CACIxF,KAAM,YACNuF,SAAU,WACVC,UAAU,GAEd,CACIxF,KAAM,OACNuF,SAAU,OACVC,UAAU,GAEd,CACIxF,KAAM,QACNuF,SAAU,QACVC,UAAU,GAEd,CACIxF,KAAM,OACNuF,SAAU,OACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChBnF,KAAKR,MAAM+F,YAAYjB,SAAShD,MAAK,SAACiD,GAClC,EAAKiB,MAAQ9D,KAAK8C,MAAMD,GACxB,EAAK1E,SAAS,CAAEgE,SAAS,S,oBAIjC,WACI,OACI,gCACI,uCACA,cAAC,IAAD,CAAWuB,QAAQ,OAAOH,QAASjF,KAAKiF,QAASrF,KAAMI,KAAKwF,e,GAzCxD/E,aC0CLgF,E,4MAzCXjG,MAAQ,CAAEoE,YAAahC,EAAY+B,SAAUE,SAAS,G,EACtDG,MAAQ,G,EACRiB,QAAU,CACN,CACItF,KAAM,KACNuF,SAAU,KACVC,UAAU,GAEd,CACIxF,KAAM,YACNuF,SAAU,WACVC,UAAU,GAEd,CACIxF,KAAM,OACNuF,SAAU,OACVC,UAAU,GAEd,CACIxF,KAAM,cACNuF,SAAU,cACVC,UAAU,I,uDAGlB,WAAqB,IAAD,OAChBnF,KAAKR,MAAMoE,YAAYU,SAAShD,MAAK,SAACiD,GAClC,EAAKP,MAAQtC,KAAK8C,MAAMD,GACxB,EAAK1E,SAAS,CAAEgE,SAAS,S,oBAIjC,WACI,OACI,gCACI,uCACA,cAAC,IAAD,CAAWuB,QAAQ,OAAOH,QAASjF,KAAKiF,QAASrF,KAAMI,KAAKgE,e,GApCxDvD,a,QC0BLiF,E,4MA5BXlG,MAAQ,G,uDAER,c,oBAEA,WAAU,IAAD,OAKL,OACI,qBAAKmG,MALM,CACXC,MAAO,OACPC,YAAa,OAGb,SACI,wBACI/F,UAAU,sCACVG,GAAID,KAAKkC,MAAMvC,KACfA,KAAMK,KAAKkC,MAAMvC,KACjByD,SAAU,SAACC,GAAD,OAAO,EAAKnB,MAAMkB,SAAS,EAAKlB,MAAMvC,KAAM0D,IAJ1D,SAMKrD,KAAKkC,MAAMoB,QAAQP,KAAI,SAACf,GAAD,OACpB,wBAAoBuB,MAAOvB,EAAED,KAA7B,SACKC,EAAED,MADMC,EAAEwB,gB,GAnBZ/C,aCsOZqF,G,yDAnNX,WAAY5D,GAAQ,IAAD,8BACf,cAAMA,IAXV1C,MAAQ,CACJkE,YAAa7C,EAAY8C,SACzBC,YAAahC,EAAY+B,SACzBoC,MAAO,KACPC,UAAW,GACXC,QAAS,QAKM,EAHnBjC,MAAQ,GAGW,EAFnBkC,OAAS,KAIL,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKnC,aAAe,EAAKA,aAAamC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBANH,E,qDASnB,WAAqB,IAAD,OAChBzH,EAAWC,UAAUN,EAAaE,gBAAgB,SAACoB,GAC/C,EAAKC,SAAS,CAAEkG,MAAOnG,IACV,OAATA,EACA,EAAKyG,YAEL,EAAKC,gBAGbtG,KAAKR,MAAMoE,YAAYU,SAAShD,MAAK,SAACiD,GAClC,EAAKP,MAAQO,KAEjBvE,KAAKgE,MAAQhE,KAAKkC,MAAM8B,Q,uBAG5B,WACIhE,KAAKH,SAAS,CACVmG,UAAW,OACXC,QAAS,Y,wBAIjB,WACIjG,KAAKH,SAAS,CACVmG,UAAW,GACXC,QAAS,W,8BAIjB,SAAiBzC,EAAKsB,GAClB,OAAO9E,KAAKkC,MAAM8B,MACbY,QAAO,SAACC,GAAD,OAAOA,EAAE/C,WAAagD,KAC7B/B,KAAI,SAAC8B,GACF,MAAO,CACHrB,IAAKsB,EAAW,IAAMD,EAAE5E,GACxB8B,KAAM8C,EAAE9C,W,wBAKxB,WACI/B,KAAKsG,e,0BAGT,SAAa3G,EAAM0D,GACf,IAAI0C,EAAQ/F,KAAKR,MAAMuG,MACvBA,EAAMpG,GAAQ0D,EAAEc,OAAOZ,MACvBvD,KAAKH,SAAS,CAAEkG,MAAOA,M,0BAG3B,c,oBAEA,WAAU,IAAD,OACL,OAAyB,OAArB/F,KAAKR,MAAMuG,OAIX,sBAAKjG,UAAU,SAAS0G,cAAY,OAAOb,MAAO,CAAEM,QAASjG,KAAKR,MAAMyG,SAAxE,UACI,qBACInG,UAAW,cAAgBE,KAAKR,MAAMwG,UACtC/F,GAAG,YACHwG,SAAS,KACTrG,KAAK,SACLoG,cAAY,OACZb,MAAO,CAAEM,QAASjG,KAAKR,MAAMyG,SANjC,SAQI,qBAAKnG,UAAU,eAAeM,KAAK,WAAnC,SACI,qBAAKN,UAAU,gBAAf,SACI,sBAAMA,UAAU,mBAAhB,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,cAAd,uBAAuCE,KAAKR,MAAMuG,MAAM9F,MACxD,wBACIyG,KAAK,SACL5G,UAAU,QACV6G,eAAa,QACbC,aAAW,QACXC,QAAS7G,KAAKsG,WALlB,SAOI,sBAAME,cAAY,OAAlB,uBAGR,sBAAK1G,UAAU,aAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,QAAQgH,QAAQ,QAAjC,mBAGA,uBACIJ,KAAK,OACL5G,UAAU,wCACVG,GAAG,QACHN,KAAK,QACL4D,MAAOvD,KAAKR,MAAMuG,MAAM3D,MACxBgB,SAAU,SAACC,GAAD,OAAO,EAAKY,aAAa,QAASZ,SAGpD,sBAAKvD,UAAU,aAAf,UACI,uBAAOA,UAAU,QAAQgH,QAAQ,cAAjC,yBAGA,0BACIC,KAAK,IACLjH,UAAU,+BACVG,GAAG,cACHN,KAAK,cACLqH,UAAQ,EACRC,UAAU,IACV1D,MAAOvD,KAAKR,MAAMuG,MAAMmB,YACxB9D,SAAU,SAACC,GAAD,OAAO,EAAKY,aAAa,cAAeZ,SAG1D,sBAAKvD,UAAU,aAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,0BACA,cAAC,EAAD,CACIH,KAAK,YACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,SACrC3B,SAAUpD,KAAKiE,kBAGvB,sBAAKnE,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,qBACA,cAAC,EAAD,CACIH,KAAK,cACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,WACrC3B,SAAUpD,KAAKiE,kBAGvB,sBAAKnE,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,sBACA,cAAC,EAAD,CACIH,KAAK,eACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,YACrC3B,SAAUpD,KAAKiE,kBAGvB,sBAAKnE,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,kBACA,cAAC,EAAD,CACIH,KAAK,WACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,QACrC3B,SAAUpD,KAAKiE,kBAGvB,sBAAKnE,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,oBACA,cAAC,EAAD,CACIH,KAAK,aACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,UACrC3B,SAAUpD,KAAKiE,kBAGvB,sBAAKnE,UAAU,sBAAf,UACI,qBAAKA,UAAU,UAAf,yBACA,cAAC,EAAD,CACIH,KAAK,iBACL2D,QAAStD,KAAK+E,iBAAiB,KAAM,YACrC3B,SAAUpD,KAAKiE,qBAI3B,sBAAKnE,UAAU,aAAf,UACI,uBAAOA,UAAU,QAAQgH,QAAQ,WAAjC,sBAGA,0BACIC,KAAK,IACLjH,UAAU,wCACVG,GAAG,WACHN,KAAK,WACL4D,MAAOvD,KAAKR,MAAMuG,MAAMoB,SACxB/D,SAAU,SAACC,GAAD,OAAO,EAAKY,aAAa,WAAYZ,YAI3D,sBAAKvD,UAAU,eAAf,UACI,wBACI4G,KAAK,SACL5G,UAAU,oBACV+G,QAAS7G,KAAKsG,WAHlB,mBAOA,wBACII,KAAK,SACL5G,UAAU,kBACV+G,QAAS7G,KAAKuG,WAHlB,gCAaxB,qBAAKzG,UAAU,gBAAgBG,GAAG,yB,GAxNzBQ,cCoGV2G,G,yDAlCX,WAAYlF,GAAQ,IAAD,8BACf,cAAMA,IAhEV1C,MAAQ,CACJkE,YAAa7C,EAAY8C,SACzBC,YAAahC,EAAY+B,SACzBxB,KAAM,KACN0B,SAAS,EACTwD,WAAW,GA0DI,EAxDnBvE,MAAQ,GAwDW,EAvDnBkB,MAAQ,GAuDW,EAtDnBiB,QAAU,CACN,CACItF,KAAM,KACNuF,SAAU,KACVC,UAAU,GAEd,CACIxF,KAAM,QACNuF,SAAU,QACVC,UAAU,GAEd,CACIxF,KAAM,aACNuF,SAAU,YACVC,UAAU,GAEd,CACIxF,KAAM,OACNuF,SAAU,WACVC,UAAU,GAEd,CACIxF,KAAM,SACNuF,SAAU,aACVC,UAAU,GAEd,CACIxF,KAAM,cACNuF,SAAU,iBACVC,UAAU,GAEd,CACIxF,KAAM,eACNuF,SAAU,cACVC,UAAU,GAEd,CACIxF,KAAM,OACN2H,KAAM,SAACC,GAAD,OACF,wBACIzH,UAAU,WACV+G,QAAS,SAACxD,GACN,EAAKmE,gBAAgBD,IAH7B,SAMI,mBAAGzH,UAAU,0BAGrB2H,gBAAgB,EAChBC,eAAe,EACfC,QAAQ,IAIG,EAenBH,gBAAkB,SAACD,GACf,IAAMtH,EAAK2H,SAASL,EAAItH,GAAI,IACtBkC,EAAO,EAAKW,MAAM+E,MAAK,SAAChD,GAAD,OAAOA,EAAE5E,KAAOA,KAC7C,EAAKJ,SAAS,CAAEsC,KAAMA,EAAM2F,MAAM,IAClCC,QAAQC,IAAI7F,GACZxD,EAAWQ,KAAKb,EAAaE,eAAgB2D,IAlB7C,EAAKqF,gBAAkB,EAAKA,gBAAgBpB,KAArB,gBAFR,E,qDAKnB,WAAqB,IAAD,OAChBpG,KAAKR,MAAMkE,YAAYY,SAAShD,MAAK,SAACiD,GAClC,EAAKzB,MAAQpB,KAAK8C,MAAMD,GACxB,EAAK1E,SAAS,CAAEgE,SAAS,OAE7B7D,KAAKR,MAAMoE,YAAYU,SAAShD,MAAK,SAACiD,GAClC,EAAKP,MAAQtC,KAAK8C,MAAMD,Q,oBAYhC,WACI,OACI,sBAAKzE,UAAU,cAAf,UACI,uCACA,cAAC,IAAD,CAAWsF,QAAQ,OAAOH,QAASjF,KAAKiF,QAASrF,KAAMI,KAAK8C,QAC5D,cAAC,EAAD,CAAYkB,MAAOhE,KAAKgE,MAAxB,iD,GA5FIvD,c,QCTdC,EAAYC,SACZC,EAAoBD,SAiDXsH,E,WA7CX,WAAYnH,GAAW,yBAUvBpB,KAAO,KAVe,KAWtBwI,eAAgB,EAXM,KAYtB3C,YAAcF,EAAY1B,SAXlB7C,IAAaF,GAAmBG,MAAM,8B,iDAa9C,WAII,OAHKf,KAAKU,KACNV,KAAKU,GAAa,IAAIuH,EAAYrH,IAE/BZ,KAAKkI,gB,mBAGhB,SAAMC,EAAUC,GAAW,IAAD,OACtBpI,KAAKkI,eAAgB,EACrB,IACMG,EADIC,SAAgBC,QAAhB,UAA2BJ,EAA3B,YAAuCC,GAAY,oCAC7CI,WAChB,OAAOxI,KAAKuF,YAAYkD,aAAa,CAAEJ,IAAKA,IAAO/G,MAC/C,SAAC5B,GAIG,OAHA,EAAKA,KAAOgC,KAAK8C,MAAM9E,GACvBgJ,eAAeC,QAAQ,OAAQjH,KAAKC,UAAU,EAAKjC,OACnD,EAAKwI,eAAgB,EACd,CAAEzI,YAAY,EAAMC,KAAM,CAAEC,KAAM,EAAKD,KAAKC,UAEvD,SAACiJ,GAEG,OADA,EAAKC,SACE,CAAEpJ,YAAY,EAAOC,KAAM,CAAEC,KAAM,U,oBAKtD,WACI+I,eAAeI,WAAW,QAC1B9I,KAAKkI,eAAgB,K,qBAtCzB,WAII,OAHKlI,KAAKU,KACNV,KAAKU,GAAa,IAAIuH,EAAYrH,IAE/BZ,KAAKU,O,KCoFLqI,E,kDAxFX,WAAY7G,GAAQ,IAAD,8BACf,cAAMA,IAJV1C,MAAQ,CAAEwJ,oBAAoB,EAAOb,SAAU,QAASC,SAAU,QAASa,MAAO,IAG/D,EAFnBC,YAAcjB,EAAYtE,SAItB,EAAKwF,YAAc,EAAKA,YAAY/C,KAAjB,gBAFJ,E,gDAKnB,SAAazG,EAAM0D,GACf,IAAIzD,EAAOI,KAAKR,MAChBI,EAAKD,GAAQ0D,EAAEc,OAAOZ,MACtBvD,KAAKH,SAASD,K,yBAGlB,WAAe,IAAD,OACVI,KAAKkJ,YAAYE,MAAMpJ,KAAKR,MAAM2I,SAAUnI,KAAKR,MAAM4I,UAAU9G,MAAK,SAACiD,GAC/DA,EAAK9E,aACLd,EAAWQ,KAAKb,EAAaC,cAAegG,GAC5C,EAAK1E,SAAS,CAAEmJ,oBAAoB,U,oBAKhD,WAAU,IAAD,OACGK,GAASrJ,KAAKkC,MAAMoH,SAAS9J,OAAS,CAAE6J,KAAM,CAAEE,SAAU,OAA1DF,KAER,OAD+BrJ,KAAKR,MAA5BwJ,mBAEG,cAAC,IAAD,CAAU7I,GAAIkJ,IAIrB,sBAAKvJ,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,kDAEI,uBAFJ,gBAKA,gEAGR,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,aAAf,SACI,iCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgH,QAAQ,WAAf,uBACA,uBACIJ,KAAK,OACL5G,UAAU,eACV0J,YAAY,YACZxC,UAAQ,EACRC,UAAU,IACV1D,MAAOvD,KAAKR,MAAM2I,SAClB/E,SAAU,SAACC,GAAD,OAAO,EAAKY,aAAa,WAAYZ,SAGvD,sBAAKvD,UAAU,aAAf,UACI,uBAAOgH,QAAQ,WAAf,sBACA,uBACIJ,KAAK,WACL5G,UAAU,eACV0J,YAAY,GACZxC,UAAQ,EACRC,UAAU,IACV1D,MAAOvD,KAAKR,MAAM4I,SAClBhF,SAAU,SAACC,GAAD,OAAO,EAAKY,aAAa,WAAYZ,SAGvD,qBAAKvD,UAAU,aAAf,SACI,uBACI4G,KAAK,SACL5G,UAAU,4BACVyD,MAAM,QACNsD,QAAS7G,KAAKmJ,gBAGtB,qBAAKrJ,UAAU,aAAf,SACI,mBAAGC,KAAK,IAAID,UAAU,eAAtB,gCAIJ,qBAAKA,UAAU,QAAf,SAAwBE,KAAKR,MAAMyJ,sB,GAnF3CxI,aCgCLgJ,E,sKAhCX,WACK,M,oBAQL,WAQI,OAPAxB,EAAYtE,SAASkF,SACrBa,YAAW,WACP/K,EAAWQ,KAAKb,EAAaC,cAAe,CACxCkB,YAAY,EACZC,KAAM,CAAEC,KAAM,QAEnB,KAEC,gCACI,mDACA,sCACU,IACN,cAAC,IAAD,CAASO,OAAK,EAACC,GAAG,QAAlB,kBAEW,IAJf,sB,GArBKM,aCoBfkJ,EAAe,SAAC,GAAD,IAAclJ,EAAd,EAAGmJ,UAAyBC,EAA5B,oCACjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAC5H,GAAD,OACJ+F,EAAYtE,SAASoG,gBACjB,cAACtJ,EAAD,eAAeyB,IAEf,cAAC,IAAD,CACI/B,GAAI,CACAoJ,SAAU,iBAQnBS,EA/BA,SAAC9H,GAAD,OACX,eAAC,IAAD,WACI,cAAC,IAAD,CAAOhC,OAAK,EAAC+J,KAAK,SAASL,UAAWb,IACtC,cAAC,IAAD,CAAO7I,OAAK,EAAC+J,KAAK,UAAUL,UAAWH,IAEvC,cAAC,EAAD,CAAcQ,KAAK,UAAUL,UAAWnG,IACxC,cAAC,EAAD,CAAcwG,KAAK,WAAWL,UAAW5E,IACzC,cAAC,EAAD,CAAciF,KAAK,SAASL,UAAWtE,IACvC,cAAC,EAAD,CAAc2E,KAAK,SAASL,UAAWnE,IACvC,cAAC,EAAD,CAAcwE,KAAK,SAASL,UAAWxC,IACvC,cAAC,EAAD,CAAc6C,KAAK,IAAIL,UAAWnG,QCtB7ByG,EAAQ7K,OAAOC,OAAO,CAC/B6K,KAAM,OACNC,MAAO,UCFEC,GAAYhL,OAAOC,OAAO,CACnCgL,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACP9H,OAAQ,SACR+H,IAAK,MACLC,KAAM,SCFCC,GAAK,KAIHC,GAAY,WACrBC,aAAarC,QAAQ,SAAUjH,KAAKC,UAAUmJ,MAE5CG,GAAU,SAACC,EAAQC,GACrB,OAAO,IAAIC,KAAKF,EAAOG,cAAeH,EAAOI,WAAYJ,EAAOK,UAAYJ,IAK1EK,GAAa,CACf,CACIvL,GAAI,EACJkI,SAAU,QACVxI,KAAM,aACN8L,MAAO,iBACPrD,SAAU,QACVhI,KAAM8J,EAAME,MACZtG,UAAW,OAEf,CACI7D,GAAI,EACJkI,SAAU,SACVxI,KAAM,iBACN8L,MAAO,iBACPrD,SAAU,SACVhI,KAAM8J,EAAMC,KACZrG,UAAW,OAEf,CACI7D,GAAI,EACJkI,SAAU,YACVxI,KAAM,cACN8L,MAAO,iBACPrD,SAAU,QACVhI,KAAM8J,EAAMC,KACZrG,UAAW,OAEf,CACI7D,GAAI,EACJkI,SAAU,YACVxI,KAAM,eACN8L,MAAO,iBACPrD,SAAU,QACVhI,KAAM8J,EAAMC,KACZrG,UAAW,OAEf,CACI7D,GAAI,EACJkI,SAAU,aACVxI,KAAM,sBACN8L,MAAO,mBACPrD,SAAU,UACVhI,KAAM8J,EAAMC,KACZrG,UAAW,OAEf,CACI7D,GAAI,EACJkI,SAAU,aACVxI,KAAM,eACN8L,MAAO,mBACPrD,SAAU,UACVhI,KAAM8J,EAAMC,KACZrG,UAAW,QAIb4H,GAAa,CAEf,CACIzL,GAAI,EACJ6B,SAAUuI,GAAUC,MACpBvI,KAAM,MACNmF,YAAa,aAEjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUC,MACpBvI,KAAM,OACNmF,YAAa,cAGjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUE,QACpBxI,KAAM,QACNmF,YAAa,kBAEjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUE,QACpBxI,KAAM,UACNmF,YAAa,oBAGjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUG,SACpBzI,KAAM,OACNmF,YAAa,iBAEjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUG,SACpBzI,KAAM,SACNmF,YAAa,mBAEjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUG,SACpBzI,KAAM,MACNmF,YAAa,gBAGjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUK,OACpB3I,KAAM,OACNmF,YAAa,QAEjB,CACIjH,GAAI,EACJ6B,SAAUuI,GAAUK,OACpB3I,KAAM,WACNmF,YAAa,YAEjB,CACIjH,GAAI,GACJ6B,SAAUuI,GAAUK,OACpB3I,KAAM,SACNmF,YAAa,UAEjB,CACIjH,GAAI,GACJ6B,SAAUuI,GAAUK,OACpB3I,KAAM,SACNmF,YAAa,UAGjB,CACIjH,GAAI,GACJ6B,SAAUuI,GAAUI,KACpB1I,KAAM,QACNmF,YAAa,SAEjB,CACIjH,GAAI,GACJ6B,SAAUuI,GAAUI,KACpB1I,KAAM,SACNmF,YAAa,UAEjB,CACIjH,GAAI,GACJ6B,SAAUuI,GAAUI,KACpB1I,KAAM,QACNmF,YAAa,UAIfyE,GAAa,CACf,CACI1L,GAAI,EACJmC,MAAO,kBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,OACdC,SAAU,SACVC,WAAY,OACZkJ,cAAe,OACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,QAChBoJ,mBAAmB,IAAIZ,MAAOW,cAC9BE,aAAc,GACdC,gBAAiB,GACjBhF,YAAa,wFACbC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,yBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,GAChBoJ,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,yBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,GAChBoJ,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,yBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,GAChBoJ,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,uBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,GAChBoJ,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,uBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,WACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,OAChBoJ,mBAAmB,IAAIZ,MAAOW,cAC9BE,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,oBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,SACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,OAChBoJ,mBAAmB,IAAIZ,MAAOW,cAC9BE,aAAc,OACdC,iBAAiB,IAAId,MAAOW,cAC5B7E,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,kBACPwJ,UAAW,MACX9H,UAAW,MACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,SACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,OAChBoJ,mBAAmB,IAAIZ,MAAOW,cAC9BE,aAAc,GACdC,gBAAiB,GACjBhF,YACI,wHACJC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,eAErC,CACI9L,GAAI,EACJmC,MAAO,gCACPwJ,UAAW,MACX9H,UAAW,OACXvB,YAAa,QACbE,aAAc,SACdC,SAAU,QACVC,WAAY,OACZkJ,cAAe,QACfC,kBAAkB,IAAIV,MAAOW,cAC7BnJ,eAAgB,GAChBoJ,kBAAmB,GACnBC,aAAc,GACdC,gBAAiB,GACjBhF,YAAa,+CACbC,SAAU,GACVgF,QAASlB,GAAQ,IAAIG,KAAQ,IAAIW,gBAM5BK,GAAiB,WAC1B,IAAIC,EAAMrB,aAAasB,QAAQ,UAC/B,IAAKC,QAAQF,GAAM,CACf,IAAIvB,EAAK,CACLtF,MAAOgG,GACPzJ,KAAM2J,GACNvJ,KAAMwJ,IAEVX,aAAarC,QAAQ,SAAUjH,KAAKC,UAAUmJ,IA/VlDA,GAAKpJ,KAAK8C,MAAMwG,aAAasB,QAAQ,YCNlC,SAASE,KACZ,IAAIC,EAAYC,OAAOxL,MACvBwL,OAAOxL,MAAQ,SAAUF,EAAK2L,GAAO,IACzBxL,EAAoBwL,EAApBxL,OACFE,GADsBsL,EAAZvL,QACHuL,EAAKtL,MAAQK,KAAK8C,MAAMmI,EAAKtL,OAE1C,OAAO,IAAIoD,SAAQ,SAACmI,EAASC,GAoHzB,SAASC,EAASzE,EAAK0E,GACnB,IAAIxF,EAAMuD,GAAGiC,GAAOlF,MAAK,SAAChD,GAAD,OAAOA,EAAE5E,KAAOoI,EAAIpI,MAS7C,OARAZ,OAAO2N,KAAK3E,GAAK4E,SAAQ,SAACC,GACV,OAARA,IACA3F,EAAI2F,GAAO7E,EAAI6E,OAGvBxD,YAAW,WACPqB,OACD,KACIoC,EAAG,IAKd,SAASC,EAAS/E,EAAK0E,GAKnB,OAJAjC,GAAGiC,GAAO1I,KAAKgE,GACfqB,YAAW,WACPqB,OACD,KACIoC,EAAG,IAKd,SAASE,EAASN,GAEd,OAAOI,EADOrC,GAAGiC,IAMrB,SAASI,EAAG9L,GACRuL,EAAQ,CACJO,IAAI,EACJ3L,KAAM,kBAAMiD,QAAQmI,QAAQlL,KAAKC,UAAUN,OAtJnDqI,YAEA,WACI,QAAQ,GACJ,KAAK1I,EAAIsM,SAAS,UACd,OAkBZ,SAAyBtM,EAAKG,GAC1B,IAAM4L,EAAQ,QACd,QAAQ,GACJ,KAAK/L,EAAIuM,SAAS,kBAA+B,SAAXpM,EAClC,OAkEZ,SAAsBkH,GAClB,IAEMmF,EAFIlF,SAAgBmF,QAAQpF,EAAK,oCACvBG,SAASF,MAAaoF,MACxBC,MAAM,KAChBpG,EAAMuD,GAAGtF,MAAMqC,MAAK,SAAChD,GAAD,OAAOA,EAAEsD,WAAaqF,EAAE,IAAM3I,EAAEuD,WAAaoF,EAAE,MACvE,QAAYI,IAARrG,EACA,OA8DOsG,EA9DM,2BA+DjBjB,EAAQ,CAAEkB,OAAQ,IAAKtM,KAAM,kBAAMiD,QAAQmI,QAAQlL,KAAKC,UAAU,CAAEkM,gBADxE,IAAeA,EA5DX,IAAMnO,EAAO6H,EACb,OAAO4F,EAAG,CACNlN,GAAIP,EAAKO,GACTkI,SAAUzI,EAAKyI,SACfxI,KAAMD,EAAKC,KACX8L,MAAO,GACPrL,KAAMV,EAAKU,KACX2N,MAAM,mBAAD,OAAqBrO,EAAKO,IAC/B6D,UAAWpE,EAAKoE,YAlFL2E,CAAapH,EAAKgH,KAE7B,KAAKrH,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAO2L,EAASzL,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAOiM,EAAS/L,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,QAAXpM,EAC5B,OAAOkM,EAASN,GAEpB,QACI,OAAON,EAAUzL,EAAK2L,GACjBrL,MAAK,SAACC,GAAD,OAAcqL,EAAQrL,MAC3ByM,OAAM,SAAC/E,GAAD,OAAW4D,EAAO5D,OApCtBgF,CAAgBjN,EAAKG,GAEhC,KAAKH,EAAIsM,SAAS,UACd,OAwCZ,SAAyBtM,EAAKG,GAC1B,IAAM4L,EAAQ,OACd,QAAQ,GACJ,KAAK/L,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAO2L,EAASzL,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAOiM,EAAS/L,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,QAAXpM,EAC5B,OAAOkM,EAASN,GAEpB,QACI,OAAON,EAAUzL,EAAK2L,GACjBrL,MAAK,SAACC,GAAD,OAAcqL,EAAQrL,MAC3ByM,OAAM,SAAC/E,GAAD,OAAW4D,EAAO5D,OAvDtBiF,CAAgBlN,EAAKG,GAEhC,KAAKH,EAAIsM,SAAS,UACd,OA2DZ,SAAyBtM,EAAKG,GAC1B,IAAM4L,EAAQ,OACd,QAAQ,GACJ,KAAK/L,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAO2L,EAASzL,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,SAAXpM,EAC5B,OAAOiM,EAAS/L,EAAM0L,GAE1B,KAAK/L,EAAIuM,SAAS,YAAyB,QAAXpM,EAC5B,OAAOkM,EAASN,GAEpB,QACI,OAAON,EAAUzL,EAAK2L,GACjBrL,MAAK,SAACC,GAAD,OAAcqL,EAAQrL,MAC3ByM,OAAM,SAAC/E,GAAD,OAAW4D,EAAO5D,OA1EtBkF,CAAgBnN,EAAKG,GAEhC,QACI,OAAOsL,EAAUzL,EAAK2L,GACjBrL,MAAK,SAACC,GAAD,OAAcqL,EAAQrL,MAC3ByM,OAAM,SAAC/E,GAAD,OAAW4D,EAAO5D,SAhBjB,S,ICsBrBmF,G,kDAxBX,WAAYlM,GAAQ,IAAD,6BACf,cAAMA,GACNkK,KACAI,KAHe,E,0CAMnB,WASI,OACI,sBAAK7G,MATM,CACXC,MAAO,MACPyI,OAAQ,OACRC,UAAW,QACXC,UAAW,QACXtI,QAAS,OACTuI,iBAAkB,YAGlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GAnBG/N,a,OCDnBgO,IAAS3E,OACL,cAAC,IAAD,UACI,cAAC,GAAD,MAEJ4E,SAASC,eAAe,W","file":"static/js/main.d0d23f71.chunk.js","sourcesContent":["import React from 'react';\r\nexport default function JsxIf({ cond, ...props }) {\r\n    const { children } = props;\r\n    let el = null;\r\n    if (cond) {\r\n        el = <>{children}</>;\r\n    }\r\n    return el;\r\n}\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n    MSG_OPEN_MODAL: 102,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst MessageBus = {\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\n    off: (event, fn) => eventEmitter.off(event, fn),\n    emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(MessageBus);\n\nexport default MessageBus;\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport JsxIf from '../../_directives/jsxif';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Header extends Component {\r\n    state = { isLoggedIn: false, user: { name: '' } };\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_LOGGED_IN, (data) => {\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n                <a href=\"#\" className=\"navbar-brand\">\r\n                    Bug Tracker Lite\r\n                </a>\r\n                <div className=\"title\">\r\n                    <div className=\"title-left\"></div>\r\n                    <div className=\"title-center\">{this.state.user.name}</div>\r\n                    <div className=\"title-right\"></div>\r\n                </div>\r\n                <JsxIf cond={this.state.isLoggedIn}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/kanban\" className=\"nav-link\">\r\n                                    Kanban\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"adminDropdown\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    Admin\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                                    <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                        Users\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                        Codes\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                        Items\r\n                                    </NavLink>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                                    Reports\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </JsxIf>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    getCodeClass(codetype, code) {\r\n        const c = code.toLowerCase();\r\n        if (codetype === 'size') {\r\n            if (c === 'large') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (codetype !== 'status') {\r\n            if (c === 'high') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (c === 'open') {\r\n            return 'badge-danger';\r\n        }\r\n        if (c !== 'closed') {\r\n            return 'badge-warning';\r\n        }\r\n        return 'badge-success';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-card\">\r\n                <div className=\"item-card-body\">\r\n                    <div className=\"item-card-header\">\r\n                        <div className=\"title\">\r\n                            <span className=\"id\">({this.props.item.id})</span> {this.props.item.title}\r\n                        </div>\r\n                        <div className=\"handle\">\r\n                            <button\r\n                                className=\"btn-edit\"\r\n                                data-title=\"Edit\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit\"\r\n                            >\r\n                                <span className=\"icon\">...</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-card-text\">\r\n                        <div className=\"codes\">\r\n                            <div className=\"code\">\r\n                                Project\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-info`}>\r\n                                    {' '}\r\n                                    {this.props.item.projectcode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Priority\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'priority',\r\n                                        this.props.item.projectcode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.prioritycode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Size\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'size',\r\n                                        this.props.item.sizecode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.sizecode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Status\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'status',\r\n                                        this.props.item.statuscode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.statuscode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Assigned\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-primary`}>\r\n                                    {this.props.item.assignedtouser}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nclass Column extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"column\">\r\n                <div className=\"header\">\r\n                    <div className=\"title\">{this.props.title} Items</div>\r\n                    <div>\r\n                        <button\r\n                            className=\"btn-edit\"\r\n                            data-title=\"Edit\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit\"\r\n                        >\r\n                            <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"open-items items\">\r\n                    {this.props.items.map((card, i) => (\r\n                        <li key={card.id}>\r\n                            <Card item={card} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column;\r\n","import React, { Component } from 'react';\r\n\r\nclass SelectCode extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"select\">\r\n                <span className=\"text\">{this.props.caption}</span>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm dropdown\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectCode;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\n\r\nimport Column from './Column';\r\nimport SelectCode from './Selectcode';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        loading: true,\r\n        boardcode: 'Dev',\r\n    };\r\n    items = [];\r\n    cards = [];\r\n    codes = [];\r\n\r\n    componentDidMount() {\r\n        let prArray = [];\r\n        prArray.push(\r\n            this.state.itemService.getAll().then((resp) => {\r\n                this.items = JSON.parse(resp);\r\n            })\r\n        );\r\n        prArray.push(\r\n            this.state.codeService.getAll().then((resp) => {\r\n                this.codes = JSON.parse(resp);\r\n            })\r\n        );\r\n        Promise.all(prArray).then((values) => {\r\n            this.getCards(this.state.boardcode);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    getCards(boardcode) {\r\n        this.cards = this.items.filter((x) => x.boardcode === boardcode);\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        return this.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    }\r\n\r\n    handleChange = (name, e) => {\r\n        this.getCards(e.target.value);\r\n        this.setState({ boardcode: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <form>\r\n                    <div className=\"header\">\r\n                        <div className=\"title\">\r\n                            <h5>\r\n                                Kanban Board - <span className=\"boardcode\">{this.state.boardcode}</span>\r\n                            </h5>\r\n                        </div>\r\n                        <SelectCode\r\n                            caption=\"Kanban Board\"\r\n                            name=\"boardcode\"\r\n                            options={this.getSelectOptions('id', 'BOARD')}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <SelectCode\r\n                            caption=\"Project\"\r\n                            name=\"projectcode\"\r\n                            options={this.getSelectOptions('id', 'PROJECT')}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"main\">\r\n                    <Column title=\"Open\" items={this.cards.filter((x) => x.statuscode === 'Open')} />\r\n                    <Column title=\"Assigned\" items={this.cards.filter((x) => x.statuscode === 'Assigned')} />\r\n                    <Column title=\"In Review\" items={this.cards.filter((x) => x.statuscode === 'Review')} />\r\n                    <Column title=\"Closed\" items={this.cards.filter((x) => x.statuscode === 'Closed')} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return response.json();\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../../_services/Userservice';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Users</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../../_services/Codeservice';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Codes</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.codes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\n\r\nclass CodeSelector extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        let cmpStyle = {\r\n            width: 'auto',\r\n            marginRight: '5px',\r\n        };\r\n        return (\r\n            <div style={cmpStyle}>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeSelector;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport CodeSelector from '../CodeSelector/CodeSelector';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './modal.scss';\r\n\r\nclass ItemEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codes = [];\r\n    _modal = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (data) => {\r\n            this.setState({ model: data });\r\n            if (data !== null) {\r\n                this.openModal();\r\n            } else {\r\n                this.closeModal();\r\n            }\r\n        });\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = resp;\r\n        });\r\n        this.codes = this.props.codes;\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        return this.props.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    }\r\n\r\n    handleSave() {\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (this.state.model === null) {\r\n            return false;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Item {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Title\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                value={this.state.model.title}\r\n                                                onChange={(e) => this.handleChange('title', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"description\">\r\n                                                Description\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                required\r\n                                                minLength=\"4\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"controlrow\">\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Kanban Board</div>\r\n                                                <CodeSelector\r\n                                                    name=\"boardcode\"\r\n                                                    options={this.getSelectOptions('id', 'BOARD')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Project</div>\r\n                                                <CodeSelector\r\n                                                    name=\"projectcode\"\r\n                                                    options={this.getSelectOptions('id', 'PROJECT')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Priority</div>\r\n                                                <CodeSelector\r\n                                                    name=\"prioritycode\"\r\n                                                    options={this.getSelectOptions('id', 'PRIORITY')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Size</div>\r\n                                                <CodeSelector\r\n                                                    name=\"sizecode\"\r\n                                                    options={this.getSelectOptions('id', 'SIZE')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Status</div>\r\n                                                <CodeSelector\r\n                                                    name=\"statuscode\"\r\n                                                    options={this.getSelectOptions('id', 'STATUS')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Assigned To</div>\r\n                                                <CodeSelector\r\n                                                    name=\"assignedtouser\"\r\n                                                    options={this.getSelectOptions('id', 'ASSIGNED')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"comments\">\r\n                                                Comments\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"comments\"\r\n                                                name=\"comments\"\r\n                                                value={this.state.model.comments}\r\n                                                onChange={(e) => this.handleChange('comments', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-overlay\" id=\"modal-overlay\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport ItemEditor from './Itemeditor';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './items.scss';\r\n\r\nclass Items extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        item: null,\r\n        loading: true,\r\n        showModal: false,\r\n    };\r\n    items = [];\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const item = this.items.find((x) => x.id === id);\r\n        this.setState({ item: item, edit: true });\r\n        console.log(item);\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, item);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"items-table\">\r\n                <h5>Items</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n                <ItemEditor codes={this.codes}>Hello, my name is Ron deBoer</ItemEditor>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = JSON.parse(user);\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nclass Login extends Component {\r\n    state = { redirectToReferrer: false, username: 'admin', password: 'admin', error: '' };\r\n    authService = AuthService.instance;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let data = this.state;\r\n        data[name] = e.target.value;\r\n        this.setState(data);\r\n    }\r\n\r\n    handleLogin() {\r\n        this.authService.login(this.state.username, this.state.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                MessageBus.emit(AppConstants.MSG_LOGGED_IN, resp);\r\n                this.setState({ redirectToReferrer: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n        const { redirectToReferrer } = this.state;\r\n        if (redirectToReferrer) {\r\n            return <Redirect to={from} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"left-panel\">\r\n                    <div className=\"login-main-text\">\r\n                        <h2>\r\n                            Bug Tracker Lite\r\n                            <br />\r\n                            Login Page\r\n                        </h2>\r\n                        <p>Login from here to access.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <div className=\"login-form\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">User Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"User Name\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.username}\r\n                                    onChange={(e) => this.handleChange('username', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.password}\r\n                                    onChange={(e) => this.handleChange('password', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"button\"\r\n                                    className=\"btnSubmit btn btn-primary\"\r\n                                    value=\"Login\"\r\n                                    onClick={this.handleLogin}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <a href=\"#\" className=\"btnForgetPwd\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"error\">{this.state.error}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../_services/Authservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\nimport Reports from '../Reports/Reports';\r\nimport Users from '../Users/Users';\r\nimport Codes from '../Codes/Codes';\r\nimport Items from '../Items/Items';\r\nimport Login from '../Login/Login';\r\nimport Logout from '../Logout/Logout';\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/logout\" component={Logout} />\r\n\r\n        <PrivateRoute path=\"/kanban\" component={Home} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    ok: true,\r\n                    json: () => Promise.resolve(JSON.stringify(body)),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({ status: 400, json: () => Promise.resolve(JSON.stringify({ message })) });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Router from './Router/Router';\r\nimport { FakeDataLoader } from '../_helpers/fake-data';\r\nimport { InitFakeBackend } from '../_helpers/fake-backend';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        FakeDataLoader();\r\n        InitFakeBackend();\r\n    }\r\n\r\n    render() {\r\n        let appStyle = {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            maxHeight: '100vh',\r\n            minHeight: '100vh',\r\n            display: 'grid',\r\n            gridTemplateRows: 'auto 1fr',\r\n        };\r\n        return (\r\n            <div style={appStyle}>\r\n                <Header />\r\n                <Router />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Main />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}