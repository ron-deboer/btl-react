{"version":3,"sources":["_directives/jsxif.js","appconstants.js","_services/Messagebus.js","components/Header/Header.js","config.js","_services/Itemservice.js","_services/Codeservice.js","components/Home/Card.js","components/Home/Column.js","components/Home/Selectcode.js","_services/Userservice.js","components/CodeSelector/CodeSelector.js","components/Items/Itemeditor.js","components/Home/Home.js","components/Reports/Reports.js","components/Users/Users.js","_interfaces/code.js","components/Codes/Codeeditor.js","components/Codes/Codes.js","components/Items/Items.js","_services/Authservice.js","components/Login/Login.js","components/Logout/Logout.js","components/Router/Router.js","_interfaces/user.js","_helpers/fake-data.js","_helpers/fake-backend.js","components/Main.js","index.js"],"names":["JsxIf","cond","children","el","AppConstants","MSG_LOGGED_IN","MSG_OPEN_MODAL","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","Object","freeze","Header","state","isLoggedIn","user","name","data","setState","className","href","this","id","exact","to","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","singleton","Symbol","singletonEnforcer","ItemService","enforcer","alert","url","config","fetch","method","headers","body","then","response","json","requestOptions","JSON","stringify","CodeService","Card","props","handleEditClick","item","bind","codetype","code","c","toLowerCase","title","onClick","e","projectcode","getCodeClass","prioritycode","sizecode","statuscode","assignedtouser","Column","data-title","data-target","items","map","card","i","SelectCode","caption","onChange","options","value","key","UserService","CodeSelector","style","width","marginRight","ItemEditor","itemService","instance","codeService","userService","model","modalShow","display","codes","handleSubmit","handleChange","openModal","closeModal","handleSave","getAll","resp","parse","users","codeType","filter","x","username","target","aria-hidden","tabIndex","type","data-dismiss","aria-label","htmlFor","rows","required","minLength","description","getSelectOptions","comments","Home","loading","boardcode","cards","getCards","prArray","push","Promise","all","values","Reports","columns","selector","sortable","striped","Users","ECodeType","Board","Project","Priority","Size","Status","Stage","Tag","Team","CodeEditor","codeTypes","Codes","cell","row","ignoreRowClick","allowOverflow","button","parseInt","find","Items","AuthService","authenticated","password","dat","CryptoJS","encrypt","toString","authenticate","sessionStorage","setItem","err","logout","removeItem","Login","redirectToReferrer","error","authService","handleLogin","login","from","location","pathname","placeholder","Logout","setTimeout","PrivateRoute","component","rest","render","isAuthenticated","Router","path","ERole","User","Admin","db","persistDb","localStorage","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","email","FAKE_CODES","FAKE_ITEMS","disporder","createdbyuser","createdtimestamp","toISOString","assignedtimestamp","closedbyuser","closedtimestamp","duedate","FakeDataLoader","str","getItem","Boolean","InitFakeBackend","realFetch","window","opts","resolve","reject","doUpdate","dtype","keys","forEach","fld","ok","doInsert","doGetAll","includes","endsWith","a","decrypt","Utf8","split","undefined","message","status","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","Main","margin","maxHeight","minHeight","gridTemplateRows","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aa6379cc.chunk.js","sourcesContent":["import React from 'react';\r\nexport default function JsxIf({ cond, ...props }) {\r\n    const { children } = props;\r\n    let el = null;\r\n    if (cond) {\r\n        el = <>{children}</>;\r\n    }\r\n    return el;\r\n}\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n    MSG_OPEN_MODAL: 102,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\r\n\r\nconst eventEmitter = new EventEmitter();\r\n\r\nconst MessageBus = {\r\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\r\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\r\n    off: (event, fn) => eventEmitter.off(event, fn),\r\n    emit: (event, payload) => eventEmitter.emit(event, payload),\r\n};\r\n\r\nObject.freeze(MessageBus);\r\n\r\nexport default MessageBus;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport JsxIf from '../../_directives/jsxif';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n    state = { isLoggedIn: false, user: { name: '' } };\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_LOGGED_IN, (data) => {\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n                <a href=\"#\" className=\"navbar-brand\">\r\n                    Bug Tracker Lite\r\n                </a>\r\n                <div className=\"title\">\r\n                    <div className=\"title-left\"></div>\r\n                    <div className=\"title-center\">{this.state.user.name}</div>\r\n                    <div className=\"title-right\"></div>\r\n                </div>\r\n                <JsxIf cond={this.state.isLoggedIn}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/kanban\" className=\"nav-link\">\r\n                                    Kanban\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"adminDropdown\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    Admin\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                                    <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                        Users\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                        Codes\r\n                                    </NavLink>\r\n                                    <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                        Items\r\n                                    </NavLink>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                                    Reports\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </JsxIf>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import React, { Component } from 'react';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Card extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleEditClick = () => {\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, this.props.item);\r\n    };\r\n\r\n    getCodeClass(codetype, code) {\r\n        const c = code.toLowerCase();\r\n        if (codetype === 'size') {\r\n            if (c === 'large') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (codetype !== 'status') {\r\n            if (c === 'high') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (c === 'open') {\r\n            return 'badge-danger';\r\n        }\r\n        if (c !== 'closed') {\r\n            return 'badge-warning';\r\n        }\r\n        return 'badge-success';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-card\">\r\n                <div className=\"item-card-body\">\r\n                    <div className=\"item-card-header\">\r\n                        <div className=\"title\">\r\n                            <span className=\"id\">({this.props.item.id})</span> {this.props.item.title}\r\n                        </div>\r\n                        <div className=\"handle\">\r\n                            <button\r\n                                className=\"btn-edit\"\r\n                                onClick={(e) => {\r\n                                    this.handleEditClick();\r\n                                }}\r\n                            >\r\n                                <span className=\"icon\">...</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-card-text\">\r\n                        <div className=\"codes\">\r\n                            <div className=\"code\">\r\n                                Project\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-info`}>\r\n                                    {' '}\r\n                                    {this.props.item.projectcode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Priority\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'priority',\r\n                                        this.props.item.projectcode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.prioritycode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Size\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'size',\r\n                                        this.props.item.sizecode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.sizecode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Status\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'status',\r\n                                        this.props.item.statuscode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.statuscode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Assigned\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-primary`}>\r\n                                    {this.props.item.assignedtouser}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nclass Column extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"column\">\r\n                <div className=\"header\">\r\n                    <div className=\"title\">{this.props.title} Items</div>\r\n                    <div>\r\n                        <button\r\n                            className=\"btn-edit\"\r\n                            data-title=\"Edit\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit\"\r\n                        >\r\n                            <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"open-items items\">\r\n                    {this.props.items.map((card, i) => (\r\n                        <li key={card.id}>\r\n                            <Card item={card} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column;\r\n","import React, { Component } from 'react';\r\n\r\nclass SelectCode extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"select\">\r\n                <span className=\"text\">{this.props.caption}</span>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm dropdown\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectCode;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return response.json();\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\n\r\nclass CodeSelector extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        let cmpStyle = {\r\n            width: 'auto',\r\n            marginRight: '5px',\r\n        };\r\n        return (\r\n            <div style={cmpStyle}>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeSelector;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport CodeSelector from '../CodeSelector/CodeSelector';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './itemeditor.scss';\r\n\r\nclass ItemEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codes = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (data) => {\r\n            this.setState({ model: data });\r\n            if (data !== null) {\r\n                this.openModal();\r\n            } else {\r\n                this.closeModal();\r\n            }\r\n        });\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n        });\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            return this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n        }\r\n        return this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (this.state.model === null) {\r\n            return false;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Item {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Title\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                value={this.state.model.title}\r\n                                                onChange={(e) => this.handleChange('title', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"description\">\r\n                                                Description\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                required\r\n                                                minLength=\"4\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"controlrow\">\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Kanban Board</div>\r\n                                                <CodeSelector\r\n                                                    name=\"boardcode\"\r\n                                                    options={this.getSelectOptions('id', 'BOARD')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Project</div>\r\n                                                <CodeSelector\r\n                                                    name=\"projectcode\"\r\n                                                    options={this.getSelectOptions('id', 'PROJECT')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Priority</div>\r\n                                                <CodeSelector\r\n                                                    name=\"prioritycode\"\r\n                                                    options={this.getSelectOptions('id', 'PRIORITY')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Size</div>\r\n                                                <CodeSelector\r\n                                                    name=\"sizecode\"\r\n                                                    options={this.getSelectOptions('id', 'SIZE')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Status</div>\r\n                                                <CodeSelector\r\n                                                    name=\"statuscode\"\r\n                                                    options={this.getSelectOptions('id', 'STATUS')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Assigned To</div>\r\n                                                <CodeSelector\r\n                                                    name=\"assignedtouser\"\r\n                                                    options={this.getSelectOptions('id', 'ASSIGNED')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"comments\">\r\n                                                Comments\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"comments\"\r\n                                                name=\"comments\"\r\n                                                value={this.state.model.comments}\r\n                                                onChange={(e) => this.handleChange('comments', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                            Close\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\n\r\nimport Column from './Column';\r\nimport SelectCode from './Selectcode';\r\nimport ItemEditor from '../Items/Itemeditor';\r\n\r\nimport './home.scss';\r\nimport './card.scss';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        loading: true,\r\n        boardcode: 'Dev',\r\n    };\r\n    items = [];\r\n    cards = [];\r\n    codes = [];\r\n\r\n    componentDidMount() {\r\n        let prArray = [];\r\n        prArray.push(\r\n            this.state.itemService.getAll().then((resp) => {\r\n                this.items = JSON.parse(resp);\r\n            })\r\n        );\r\n        prArray.push(\r\n            this.state.codeService.getAll().then((resp) => {\r\n                this.codes = JSON.parse(resp);\r\n            })\r\n        );\r\n        Promise.all(prArray).then((values) => {\r\n            this.getCards(this.state.boardcode);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    getCards(boardcode) {\r\n        this.cards = this.items.filter((x) => x.boardcode === boardcode);\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        return this.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    }\r\n\r\n    handleChange = (name, e) => {\r\n        this.getCards(e.target.value);\r\n        this.setState({ boardcode: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n                <form>\r\n                    <div className=\"header\">\r\n                        <div className=\"title\">\r\n                            <h5>\r\n                                Kanban Board - <span className=\"boardcode\">{this.state.boardcode}</span>\r\n                            </h5>\r\n                        </div>\r\n                        <SelectCode\r\n                            caption=\"Kanban Board\"\r\n                            name=\"boardcode\"\r\n                            options={this.getSelectOptions('id', 'BOARD')}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <SelectCode\r\n                            caption=\"Project\"\r\n                            name=\"projectcode\"\r\n                            options={this.getSelectOptions('id', 'PROJECT')}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"main\">\r\n                    <Column title=\"Open\" items={this.cards.filter((x) => x.statuscode === 'Open')} />\r\n                    <Column title=\"Assigned\" items={this.cards.filter((x) => x.statuscode === 'Assigned')} />\r\n                    <Column title=\"In Review\" items={this.cards.filter((x) => x.statuscode === 'Review')} />\r\n                    <Column title=\"Closed\" items={this.cards.filter((x) => x.statuscode === 'Closed')} />\r\n                </div>\r\n                <ItemEditor />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../../_services/Userservice';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Users</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport { ECodeType } from '../../_interfaces/code';\r\n\r\nimport './codeeditor.scss';\r\n\r\nclass CodeEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codeTypes = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (data) => {\r\n            this.setState({ model: data });\r\n            if (data !== null) {\r\n                this.openModal();\r\n            } else {\r\n                this.closeModal();\r\n            }\r\n        });\r\n        this.codeTypes = Object.values(ECodeType);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            return this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n        }\r\n        return this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (this.state.model === null) {\r\n            return false;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Code {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code Type\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"codetype\"\r\n                                                name=\"codetype\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('codetype', e)}\r\n                                            >\r\n                                                {this.codeTypes.map((c) => (\r\n                                                    <option key={c} value={c}>\r\n                                                        {c}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"code\"\r\n                                                name=\"code\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('code', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Description\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                            Close\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../../_services/Codeservice';\r\nimport CodeEditor from './Codeeditor';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './codes.scss';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const code = this.codes.find((x) => x.id === id);\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, code);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"codes-table\">\r\n                <h5>Codes</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.codes} />\r\n                <CodeEditor />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport ItemEditor from './Itemeditor';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './items.scss';\r\n\r\nclass Items extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        item: null,\r\n        loading: true,\r\n    };\r\n    items = [];\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = JSON.parse(resp);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const item = this.items.find((x) => x.id === id);\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, item);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"items-table\">\r\n                <h5>Items</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n                <ItemEditor />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = JSON.parse(user);\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nimport './login.scss';\r\n\r\nclass Login extends Component {\r\n    state = { redirectToReferrer: false, username: 'admin', password: 'admin', error: '' };\r\n    authService = AuthService.instance;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let data = this.state;\r\n        data[name] = e.target.value;\r\n        this.setState(data);\r\n    }\r\n\r\n    handleLogin() {\r\n        this.authService.login(this.state.username, this.state.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                MessageBus.emit(AppConstants.MSG_LOGGED_IN, resp);\r\n                this.setState({ redirectToReferrer: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n        const { redirectToReferrer } = this.state;\r\n        if (redirectToReferrer) {\r\n            return <Redirect to={from} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"left-panel\">\r\n                    <div className=\"login-main-text\">\r\n                        <h2>\r\n                            Bug Tracker Lite\r\n                            <br />\r\n                            Login Page\r\n                        </h2>\r\n                        <p>Login from here to access.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <div className=\"login-form\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">User Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"User Name\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.username}\r\n                                    onChange={(e) => this.handleChange('username', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"\"\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    value={this.state.password}\r\n                                    onChange={(e) => this.handleChange('password', e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"button\"\r\n                                    className=\"btnSubmit btn btn-primary\"\r\n                                    value=\"Login\"\r\n                                    onClick={this.handleLogin}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <a href=\"#\" className=\"btnForgetPwd\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"error\">{this.state.error}</div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../_services/Authservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\nimport Reports from '../Reports/Reports';\r\nimport Users from '../Users/Users';\r\nimport Codes from '../Codes/Codes';\r\nimport Items from '../Items/Items';\r\nimport Login from '../Login/Login';\r\nimport Logout from '../Logout/Logout';\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/logout\" component={Logout} />\r\n\r\n        <PrivateRoute path=\"/kanban\" component={Home} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    ok: true,\r\n                    json: () => Promise.resolve(JSON.stringify(body)),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({ status: 400, json: () => Promise.resolve(JSON.stringify({ message })) });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Router from './Router/Router';\r\nimport { FakeDataLoader } from '../_helpers/fake-data';\r\nimport { InitFakeBackend } from '../_helpers/fake-backend';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        FakeDataLoader();\r\n        InitFakeBackend();\r\n    }\r\n\r\n    render() {\r\n        let appStyle = {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            maxHeight: '100vh',\r\n            minHeight: '100vh',\r\n            display: 'grid',\r\n            gridTemplateRows: 'auto 1fr',\r\n        };\r\n        return (\r\n            <div style={appStyle}>\r\n                <Header />\r\n                <Router />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Main />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}