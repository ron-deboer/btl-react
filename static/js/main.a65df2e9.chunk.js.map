{"version":3,"sources":["_interfaces/user.js","_interfaces/code.js","_interfaces/item.js","_helpers/fake-data.js","appconstants.js","_services/Messagebus.js","config.js","_services/Codeservice.js","_services/Itemservice.js","_store/appstore.js","_store/withappstore.js","components/Header/Header.js","components/Home/Card.js","components/Home/Column.js","components/Home/Selectcode.js","components/Home/Home.js","components/Reports/Reports.js","_services/Userservice.js","components/Users/Users.js","components/Codes/Codes.js","components/Items/Items.js","_services/Authservice.js","components/Login/Login.js","components/Logout/Logout.js","components/Router/Router.js","components/CodeSelector/CodeSelector.js","components/Items/Itemeditor.js","components/Codes/Codeeditor.js","components/Users/Usereditor.js","components/App.js","index.js","_helpers/fake-backend.js"],"names":["ERole","Object","freeze","User","Admin","ECodeType","Board","Project","Priority","Size","Status","Stage","Column","Tag","Team","IItem","id","title","disporder","boardcode","projectcode","prioritycode","sizecode","statuscode","createdbyuser","createdtimestamp","assignedtouser","assignedtimestamp","closedbyuser","closedtimestamp","duedate","description","comments","db","persistDb","localStorage","setItem","JSON","stringify","addDays","dateIn","days","Date","getFullYear","getMonth","getDate","FAKE_USERS","username","name","email","password","role","FAKE_CODES","codetype","code","FAKE_ITEMS","toISOString","AppConstants","MSG_LOGGED_IN","MSG_OPEN_MODAL","MSG_REFRESH_DATA","eventEmitter","EventEmitter","MessageBus","listenFor","event","fn","on","listenOnce","once","off","emit","payload","singleton","Symbol","singletonEnforcer","CodeService","enforcer","alert","url","config","fetch","method","headers","body","then","response","parse","json","data","requestOptions","this","ItemService","appstore","getNewItemId","initialstoredata","user","userName","isLoggedIn","items","codes","observable","BehaviorSubject","itemService","instance","codeService","updateUser","dat","assign","getValue","keys","forEach","key","next","fetchItemsAndCodes","prArray","push","getAll","resp","Promise","all","values","sort","i1","i2","parseInt","slice","WithAppStore","WrappedComponent","appStore","props","useState","store","setStore","subscription","useEffect","subscribe","target","indexOf","unsubscribe","className","href","exact","to","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Card","state","handleEditClick","item","bind","c","toLowerCase","onClick","e","getCodeClass","Component","map","card","i","SelectCode","caption","onChange","options","value","withAppStore","setBoardCode","loading","setLoading","cards","setCards","getCards","getTime","filter","x","getSelectOptions","codeType","handleChange","Reports","columns","selector","sortable","setState","striped","UserService","Users","userService","users","cell","row","ignoreRowClick","allowOverflow","button","find","Codes","Items","AuthService","authenticated","CryptoJS","encrypt","toString","authenticate","sessionStorage","err","logout","removeItem","Login","formData","setFormData","error","redirectToReferrer","setRedirectToReferrer","authService","from","location","pathname","htmlFor","type","placeholder","required","minLength","login","Logout","setTimeout","PrivateRoute","component","rest","render","isAuthenticated","Router","path","Home","CodeSelector","style","width","marginRight","ItemEditor","model","modalShow","display","openModal","closeModal","handleSave","codelist","unshift","userlist","validate","updateItem","insertItem","aria-hidden","tabIndex","data-dismiss","aria-label","rows","CodeEditor","codeTypes","handleSubmit","updateCode","UserEditor","roles","App","margin","maxHeight","minHeight","gridTemplateRows","str","getItem","Boolean","FakeDataLoader","realFetch","window","opts","resolve","reject","doUpdate","dtype","fld","ok","doInsert","doGetAll","status","includes","endsWith","a","decrypt","Utf8","split","undefined","message","token","catch","handleUserRoute","handleCodeRoute","handleItemRoute","InitFakeBackend","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a65df2e9.chunk.js","sourcesContent":["export const ERole = Object.freeze({\r\n    User: 'user',\r\n    Admin: 'admin',\r\n});\r\n\r\nexport const IUser = {\r\n    id: 0,\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    token: '',\r\n    boardcode: '',\r\n};\r\n","export const ECodeType = Object.freeze({\r\n    Board: 'BOARD',\r\n    Project: 'PROJECT',\r\n    Priority: 'PRIORITY',\r\n    Size: 'SIZE',\r\n    Status: 'STATUS',\r\n    Stage: 'STAGE',\r\n    Column: 'COLUMN',\r\n    Tag: 'TAG',\r\n    Team: 'TEAM',\r\n});\r\n\r\nexport const ICode = {\r\n    id: 0,\r\n    codetype: '',\r\n    code: '',\r\n    description: '',\r\n};\r\n","export const IItem = {\r\n    id: 0,\r\n    title: '',\r\n    disporder: 0,\r\n    boardcode: '',\r\n    projectcode: '',\r\n    prioritycode: '',\r\n    sizecode: '',\r\n    statuscode: '',\r\n    createdbyuser: '',\r\n    createdtimestamp: '',\r\n    assignedtouser: '',\r\n    assignedtimestamp: '',\r\n    closedbyuser: '',\r\n    closedtimestamp: '',\r\n    duedate: '',\r\n    description: '',\r\n    comments: '',\r\n};\r\n","import { IUser, ERole } from '../_interfaces/user';\r\nimport { ICode, ECodeType } from '../_interfaces/code';\r\nimport { IItem } from '../_interfaces/item';\r\n\r\n/**\r\n * db object and core functions\r\n */\r\nexport let db = null;\r\nexport const fetchDb = () => {\r\n    db = JSON.parse(localStorage.getItem('demoDb'));\r\n};\r\nexport const persistDb = () => {\r\n    localStorage.setItem('demoDb', JSON.stringify(db));\r\n};\r\nconst addDays = (dateIn, days) => {\r\n    return new Date(dateIn.getFullYear(), dateIn.getMonth(), dateIn.getDate() + days);\r\n};\r\n/**\r\n * fake data\r\n */\r\nconst FAKE_USERS = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        name: 'Admin User',\r\n        email: 'admin@mail.com',\r\n        password: 'admin',\r\n        role: ERole.Admin,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'user-1',\r\n        name: 'Regular User 1',\r\n        email: 'user1@mail.com',\r\n        password: 'user-1',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'dev-luker',\r\n        name: 'Luke Rogers',\r\n        email: 'luker@mail.com',\r\n        password: 'luker',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'dev-gailp',\r\n        name: 'Gail Parsons',\r\n        email: 'gailp@mail.com',\r\n        password: 'gailp',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 5,\r\n        username: 'qa-patches',\r\n        name: 'Patches the Whippet',\r\n        email: 'patches@mail.com',\r\n        password: 'patches',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n    {\r\n        id: 6,\r\n        username: 'qa-belladb',\r\n        name: 'Bella deBoer',\r\n        email: 'belladb@mail.com',\r\n        password: 'belladb',\r\n        role: ERole.User,\r\n        boardcode: 'Dev',\r\n    },\r\n];\r\n\r\nconst FAKE_CODES = [\r\n    // kanban board\r\n    {\r\n        id: 1,\r\n        codetype: ECodeType.Board,\r\n        code: 'Dev',\r\n        description: 'Dev board',\r\n    },\r\n    {\r\n        id: 2,\r\n        codetype: ECodeType.Board,\r\n        code: 'Bugs',\r\n        description: 'Bugs board',\r\n    },\r\n    // project\r\n    {\r\n        id: 3,\r\n        codetype: ECodeType.Project,\r\n        code: 'WebUi',\r\n        description: 'Web UI Project',\r\n    },\r\n    {\r\n        id: 4,\r\n        codetype: ECodeType.Project,\r\n        code: 'RestApi',\r\n        description: 'Rest API Project',\r\n    },\r\n    // priority\r\n    {\r\n        id: 5,\r\n        codetype: ECodeType.Priority,\r\n        code: 'High',\r\n        description: 'High Priority',\r\n    },\r\n    {\r\n        id: 6,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Medium',\r\n        description: 'Medium Priority',\r\n    },\r\n    {\r\n        id: 7,\r\n        codetype: ECodeType.Priority,\r\n        code: 'Low',\r\n        description: 'Low Priority',\r\n    },\r\n    // status\r\n    {\r\n        id: 8,\r\n        codetype: ECodeType.Status,\r\n        code: 'Open',\r\n        description: 'Open',\r\n    },\r\n    {\r\n        id: 9,\r\n        codetype: ECodeType.Status,\r\n        code: 'Assigned',\r\n        description: 'Assigned',\r\n    },\r\n    {\r\n        id: 10,\r\n        codetype: ECodeType.Status,\r\n        code: 'Review',\r\n        description: 'Review',\r\n    },\r\n    {\r\n        id: 20,\r\n        codetype: ECodeType.Status,\r\n        code: 'Closed',\r\n        description: 'Closed',\r\n    },\r\n    // size\r\n    {\r\n        id: 21,\r\n        codetype: ECodeType.Size,\r\n        code: 'Small',\r\n        description: 'Small',\r\n    },\r\n    {\r\n        id: 22,\r\n        codetype: ECodeType.Size,\r\n        code: 'Medium',\r\n        description: 'Medium',\r\n    },\r\n    {\r\n        id: 23,\r\n        codetype: ECodeType.Size,\r\n        code: 'Large',\r\n        description: 'Large',\r\n    },\r\n];\r\n\r\nconst FAKE_ITEMS = [\r\n    {\r\n        id: 1,\r\n        title: 'Develop nav bar',\r\n        disporder: 10001,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'High',\r\n        sizecode: 'Medium',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'user',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'luker',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Develop CRUD for codes',\r\n        disporder: 10002,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Develop CRUD for users',\r\n        disporder: 10003,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Develop CRUD for items',\r\n        disporder: 10004,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Develop kanban board',\r\n        disporder: 10005,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Develop ui framework',\r\n        disporder: 10006,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Assigned',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Develop db schema',\r\n        disporder: 10007,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Closed',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: 'user',\r\n        closedtimestamp: new Date().toISOString(),\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Develop web api',\r\n        disporder: 10008,\r\n        boardcode: 'Dev',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Review',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: 'user',\r\n        assignedtimestamp: new Date().toISOString(),\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description:\r\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. ',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Add more padding to item card',\r\n        disporder: 10009,\r\n        boardcode: 'Bugs',\r\n        projectcode: 'WebUi',\r\n        prioritycode: 'Medium',\r\n        sizecode: 'Small',\r\n        statuscode: 'Open',\r\n        createdbyuser: 'admin',\r\n        createdtimestamp: new Date().toISOString(),\r\n        assignedtouser: '',\r\n        assignedtimestamp: '',\r\n        closedbyuser: '',\r\n        closedtimestamp: '',\r\n        description: 'Add more padding to item card in kanban page',\r\n        comments: '',\r\n        duedate: addDays(new Date(), 10).toISOString(),\r\n    },\r\n];\r\n/**\r\n * initial data load and persist\r\n */\r\nexport const FakeDataLoader = () => {\r\n    let str = localStorage.getItem('demoDb');\r\n    if (!Boolean(str)) {\r\n        let db = {\r\n            users: FAKE_USERS,\r\n            code: FAKE_CODES,\r\n            item: FAKE_ITEMS,\r\n        };\r\n        localStorage.setItem('demoDb', JSON.stringify(db));\r\n    }\r\n    fetchDb();\r\n};\r\n","const AppConstants = {\r\n    MSG_LOGGED_IN: 101,\r\n    MSG_OPEN_MODAL: 102,\r\n    MSG_REFRESH_DATA: 103,\r\n};\r\nexport default AppConstants;\r\n","import EventEmitter from 'eventemitter3';\r\n\r\nconst eventEmitter = new EventEmitter();\r\n\r\nconst MessageBus = {\r\n    listenFor: (event, fn) => eventEmitter.on(event, fn),\r\n    listenOnce: (event, fn) => eventEmitter.once(event, fn),\r\n    off: (event, fn) => eventEmitter.off(event, fn),\r\n    emit: (event, payload) => eventEmitter.emit(event, payload),\r\n};\r\n\r\nObject.freeze(MessageBus);\r\n\r\nexport default MessageBus;\r\n","export default {\r\n    apiUrl: 'https://localhost:1314/v1',\r\n};\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass CodeService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new CodeService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/code/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/update`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n\r\n    insertCode(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/code/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default CodeService;\r\n","import config from '../config';\r\nimport { appstore } from '../_store/appstore';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass ItemService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new ItemService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/item/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateItem(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/update`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n\r\n    insertItem(data) {\r\n        data.id = appstore.getNewItemId();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/item/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport CodeService from '../_services/Codeservice';\r\nimport ItemService from '../_services/Itemservice';\r\n\r\nconst initialstoredata = {\r\n    user: {\r\n        userName: 'Ron deBoer',\r\n        isLoggedIn: false,\r\n    },\r\n    items: [],\r\n    codes: [],\r\n};\r\nclass AppStore {\r\n    observable = new BehaviorSubject(initialstoredata);\r\n    itemService = ItemService.instance;\r\n    codeService = CodeService.instance;\r\n\r\n    updateUser = (data) => {\r\n        let dat = Object.assign({}, this.observable.getValue());\r\n        Object.keys(data).forEach((key) => {\r\n            dat.user[key] = data[key];\r\n        });\r\n        this.observable.next(dat);\r\n    };\r\n\r\n    fetchItemsAndCodes = () => {\r\n        let prArray = [];\r\n        prArray.push(\r\n            this.itemService.getAll().then((resp) => {\r\n                return resp;\r\n            })\r\n        );\r\n        prArray.push(\r\n            this.codeService.getAll().then((resp) => {\r\n                return resp;\r\n            })\r\n        );\r\n        Promise.all(prArray).then((values) => {\r\n            let dat = Object.assign({}, this.observable.getValue());\r\n            dat.items = values[0];\r\n            dat.codes = values[1];\r\n            this.observable.next(dat);\r\n        });\r\n    };\r\n\r\n    getNewItemId() {\r\n        const last = this.observable\r\n            .getValue()\r\n            .items.sort((i1, i2) => (parseInt(i1.id, 10) > parseInt(i2.id, 10) ? 1 : -1))\r\n            .slice(-1)[0];\r\n        return last.id + 1;\r\n    }\r\n}\r\nconst appstore = new AppStore();\r\nexport { appstore, initialstoredata };\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppConstants from '../appconstants';\r\nimport MessageBus from '../_services/Messagebus';\r\nimport { appstore, initialstoredata } from './appstore';\r\n\r\nconst WithAppStore = (WrappedComponent) => {\r\n    return function WithAppStoreComponent({ appStore, ...props }) {\r\n        const [store, setStore] = useState(initialstoredata);\r\n        let subscription = null;\r\n\r\n        useEffect(() => {\r\n            subscription = appstore.observable.subscribe((data) => {\r\n                setStore(data);\r\n            });\r\n            appstore.fetchItemsAndCodes();\r\n            MessageBus.listenFor(AppConstants.MSG_REFRESH_DATA, (payload) => {\r\n                if (payload.target.indexOf('itemsandcodes') > -1) {\r\n                    appstore.fetchItemsAndCodes();\r\n                }\r\n            });\r\n            return () => {\r\n                subscription.unsubscribe();\r\n            };\r\n        }, []);\r\n\r\n        return <WrappedComponent appStore={store} {...props} />;\r\n    };\r\n};\r\n\r\nexport default WithAppStore;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport WithAppStore from '../../_store/withappstore';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = (props) => {\r\n    if (!props.appStore.user.isLoggedIn) {\r\n        return null;\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-custom\">\r\n            <a href=\"#\" className=\"navbar-brand appname\">\r\n                Bug Tracker Lite\r\n            </a>\r\n            <div className=\"title\">\r\n                <div className=\"title-left\"></div>\r\n                <div className=\"title-center\">{props.appStore.user.userName}</div>\r\n                <div className=\"title-right\"></div>\r\n            </div>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse8\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/\" className=\"nav-link\">\r\n                            Kanban\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a\r\n                            className=\"nav-link dropdown-toggle\"\r\n                            href=\"#\"\r\n                            id=\"adminDropdown\"\r\n                            role=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded=\"false\"\r\n                        >\r\n                            Admin\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"adminDropdown\">\r\n                            <NavLink exact to=\"/users\" className=\"dropdown-item\">\r\n                                Users\r\n                            </NavLink>\r\n                            <NavLink exact to=\"/codes\" className=\"dropdown-item\">\r\n                                Codes\r\n                            </NavLink>\r\n                            <NavLink exact to=\"/items\" className=\"dropdown-item\">\r\n                                Items\r\n                            </NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/reports\" className=\"nav-link\">\r\n                            Reports\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n                            Logout\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default WithAppStore(Header);\r\n","import React, { Component } from 'react';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Card extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleEditClick = () => {\r\n        const payload = {\r\n            target: 'itemeditor',\r\n            data: this.props.item,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    getCodeClass(codetype, code) {\r\n        const c = code.toLowerCase();\r\n        if (codetype === 'size') {\r\n            if (c === 'large') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (codetype !== 'status') {\r\n            if (c === 'high') {\r\n                return 'badge-danger';\r\n            }\r\n            if (c === 'medium') {\r\n                return 'badge-warning';\r\n            }\r\n            return 'badge-success';\r\n        }\r\n        if (c === 'open') {\r\n            return 'badge-danger';\r\n        }\r\n        if (c !== 'closed') {\r\n            return 'badge-warning';\r\n        }\r\n        return 'badge-success';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-card\">\r\n                <div className=\"item-card-body\">\r\n                    <div className=\"item-card-header\">\r\n                        <div className=\"title\">\r\n                            <span className=\"id\">({this.props.item.id})</span> {this.props.item.title}\r\n                        </div>\r\n                        <div className=\"handle\">\r\n                            <button\r\n                                className=\"btn-edit\"\r\n                                onClick={(e) => {\r\n                                    this.handleEditClick();\r\n                                }}\r\n                            >\r\n                                <span className=\"icon\">...</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-card-text\">\r\n                        <div className=\"codes\">\r\n                            <div className=\"code\">\r\n                                Project\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-info`}>\r\n                                    {' '}\r\n                                    {this.props.item.projectcode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Priority\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'priority',\r\n                                        this.props.item.projectcode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.prioritycode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Size\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'size',\r\n                                        this.props.item.sizecode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.sizecode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Status\r\n                                <br />\r\n                                <span\r\n                                    className={`badge badge-pill ${this.getCodeClass(\r\n                                        'status',\r\n                                        this.props.item.statuscode\r\n                                    )}`}\r\n                                >\r\n                                    {this.props.item.statuscode}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"code\">\r\n                                Assigned\r\n                                <br />\r\n                                <span className={`badge badge-pill badge-primary`}>\r\n                                    {this.props.item.assignedtouser}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport { IItem } from '../../_interfaces/item';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport Card from './Card';\r\n\r\nconst Column = (props) => {\r\n    const handleAddItem = () => {\r\n        const payload = {\r\n            target: 'itemeditor',\r\n            data: IItem,\r\n        };\r\n        payload.data.boardcode = props.boardcode;\r\n        payload.data.statuscode = props.statuscode;\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    return (\r\n        <div className=\"column\">\r\n            <div className=\"header\">\r\n                <div className=\"title\">{props.title} Items</div>\r\n                <button className=\"btn-edit\" onClick={handleAddItem}>\r\n                    <i className=\"fa fa-plus fa-xs icon\"></i>\r\n                </button>\r\n            </div>\r\n            <ul className=\"open-items items\">\r\n                {props.items.map((card, i) => (\r\n                    <li key={card.id}>\r\n                        <Card item={card} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Column;\r\n","import React, { Component } from 'react';\r\n\r\nclass SelectCode extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"selectcode\">\r\n                <span className=\"text\">{this.props.caption}</span>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm dropdown\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectCode;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Column from './Column';\r\nimport SelectCode from './Selectcode';\r\nimport withAppStore from '../../_store/withappstore';\r\n\r\nimport './home.scss';\r\nimport './card.scss';\r\n\r\nconst Home = (props) => {\r\n    const [boardcode, setBoardCode] = useState('Dev');\r\n    const [loading, setLoading] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    // didMount\r\n    useEffect(() => {\r\n        getCards(boardcode);\r\n        setLoading(new Date().getTime());\r\n    }, []);\r\n\r\n    // onUpdate\r\n    useEffect(() => {\r\n        getCards(boardcode);\r\n        setLoading(new Date().getTime());\r\n    }, [props.appStore.codes, props.appStore.items]);\r\n\r\n    const getCards = (boardcode) => {\r\n        setCards(props.appStore.items.filter((x) => x.boardcode === boardcode));\r\n    };\r\n\r\n    const getSelectOptions = (key, codeType) => {\r\n        return props.appStore.codes\r\n            .filter((x) => x.codetype === codeType)\r\n            .map((x) => {\r\n                return {\r\n                    key: codeType + '_' + x.id,\r\n                    code: x.code,\r\n                };\r\n            });\r\n    };\r\n\r\n    const handleChange = (name, e) => {\r\n        if (name === 'boardcode') {\r\n            setBoardCode(e.target.value);\r\n            getCards(e.target.value);\r\n        }\r\n    };\r\n\r\n    if (loading === false) {\r\n        return <h4>Loading...</h4>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <form>\r\n                <div className=\"header\">\r\n                    <div className=\"title\">\r\n                        Kanban Board - <span className=\"boardcode\">{boardcode}</span>\r\n                    </div>\r\n                    <SelectCode\r\n                        caption=\"Kanban Board\"\r\n                        name=\"boardcode\"\r\n                        options={getSelectOptions('id', 'BOARD')}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <SelectCode\r\n                        caption=\"Project\"\r\n                        name=\"projectcode\"\r\n                        options={getSelectOptions('id', 'PROJECT')}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"main\">\r\n                <Column\r\n                    title=\"Open\"\r\n                    items={cards.filter((x) => x.statuscode === 'Open')}\r\n                    statuscode=\"Open\"\r\n                    boardcode={boardcode}\r\n                />\r\n                <Column\r\n                    title=\"Assigned\"\r\n                    items={cards.filter((x) => x.statuscode === 'Assigned')}\r\n                    statuscode=\"Assigned\"\r\n                    boardcode={boardcode}\r\n                />\r\n                <Column\r\n                    title=\"In Review\"\r\n                    items={cards.filter((x) => x.statuscode === 'Review')}\r\n                    statuscode=\"Review\"\r\n                    boardcode={boardcode}\r\n                />\r\n                <Column\r\n                    title=\"Closed\"\r\n                    items={cards.filter((x) => x.statuscode === 'Closed')}\r\n                    statuscode=\"Closed\"\r\n                    boardcode={boardcode}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAppStore(Home);\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\n\r\nclass Reports extends Component {\r\n    state = { itemService: ItemService.instance, loading: true };\r\n    items = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Reports</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;\r\n","import config from '../config';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass UserService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    getAll() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: null,\r\n        };\r\n        const url = `${config.apiUrl}/user/getall`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    authenticate(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/authenticate`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    updateUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/update`;\r\n        return fetch(url, requestOptions).then((response) => {\r\n            return JSON.parse(response.json());\r\n        });\r\n    }\r\n\r\n    insertUser(data) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        };\r\n        const url = `${config.apiUrl}/user/insert`;\r\n        return fetch(url, requestOptions).then((response) => JSON.parse(response.json()));\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport UserService from '../../_services/Userservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './users.scss';\r\n\r\nclass Users extends Component {\r\n    state = { userService: UserService.instance, loading: true };\r\n    users = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User Name',\r\n            selector: 'username',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'email',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: 'role',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const user = this.users.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'usereditor',\r\n            data: user,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"users-table\">\r\n                <h5>Users</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport CodeService from '../../_services/Codeservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './codes.scss';\r\n\r\nclass Codes extends Component {\r\n    state = { codeService: CodeService.instance, loading: true };\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code Type',\r\n            selector: 'codetype',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Code',\r\n            selector: 'code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Description',\r\n            selector: 'description',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const code = this.codes.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'codeeditor',\r\n            data: code,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"codes-table\">\r\n                <h5>Codes</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.codes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Codes;\r\n","import React, { Component } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './items.scss';\r\n\r\nclass Items extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        item: null,\r\n        loading: true,\r\n    };\r\n    items = [];\r\n    codes = [];\r\n    columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Title',\r\n            selector: 'title',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Board Code',\r\n            selector: 'boardcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Size',\r\n            selector: 'sizecode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: 'statuscode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Assigned to',\r\n            selector: 'assignedtouser',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Project Code',\r\n            selector: 'projectcode',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Edit',\r\n            cell: (row) => (\r\n                <button\r\n                    className=\"btn-edit\"\r\n                    onClick={(e) => {\r\n                        this.handleEditClick(row);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-pencil fa-xs\"></i>\r\n                </button>\r\n            ),\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEditClick = this.handleEditClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.itemService.getAll().then((resp) => {\r\n            this.items = resp;\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    handleEditClick = (row) => {\r\n        const id = parseInt(row.id, 10);\r\n        const item = this.items.find((x) => x.id === id);\r\n        const payload = {\r\n            target: 'itemeditor',\r\n            data: item,\r\n        };\r\n        MessageBus.emit(AppConstants.MSG_OPEN_MODAL, payload);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"items-table\">\r\n                <h5>Items</h5>\r\n                <DataTable striped=\"true\" columns={this.columns} data={this.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import UserService from './Userservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nconst singleton = Symbol();\r\nconst singletonEnforcer = Symbol();\r\n\r\nclass AuthService {\r\n    // force this class to be a singleton\r\n    constructor(enforcer) {\r\n        if (enforcer !== singletonEnforcer) alert('Cannot construct singleton');\r\n    }\r\n    static get instance() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this[singleton];\r\n    }\r\n\r\n    user = null;\r\n    authenticated = false;\r\n    userService = UserService.instance;\r\n\r\n    get isAuthenticated() {\r\n        if (!this[singleton]) {\r\n            this[singleton] = new AuthService(singletonEnforcer);\r\n        }\r\n        return this.authenticated;\r\n    }\r\n\r\n    login(username, password) {\r\n        this.authenticated = false;\r\n        let enc = CryptoJS.Rabbit.encrypt(`${username}.${password}`, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n        const dat = enc.toString();\r\n        return this.userService.authenticate({ dat: dat }).then(\r\n            (user) => {\r\n                this.user = user;\r\n                sessionStorage.setItem('user', JSON.stringify(this.user));\r\n                this.authenticated = true;\r\n                return { isLoggedIn: true, user: { name: this.user.name } };\r\n            },\r\n            (err) => {\r\n                this.logout();\r\n                return { isLoggedIn: false, user: { name: '' } };\r\n            }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.authenticated = false;\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from '../../_services/Authservice';\r\nimport { appstore } from '../../_store/appstore';\r\n\r\nimport './login.scss';\r\n\r\nconst Login = (props) => {\r\n    const [formData, setFormData] = useState({ username: 'admin', password: 'admin' });\r\n    const [error, setError] = useState('');\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n    const authService = AuthService.instance;\r\n\r\n    const handleChange = (name, e) => {\r\n        let dat = formData;\r\n        dat[name] = e.target.value;\r\n        setFormData(dat);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        authService.login(formData.username, formData.password).then((resp) => {\r\n            if (resp.isLoggedIn) {\r\n                appstore.updateUser({\r\n                    userName: formData.username,\r\n                    isLoggedIn: true,\r\n                });\r\n                setRedirectToReferrer(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const { from } = props.location.state || { from: { pathname: '/' } };\r\n    if (redirectToReferrer) {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"left-panel\">\r\n                <div className=\"login-main-text\">\r\n                    <h2>\r\n                        Bug Tracker Lite\r\n                        <br />\r\n                        Login Page\r\n                    </h2>\r\n                    <p>Login from here to access.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <div className=\"login-form\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">User Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"User Name\"\r\n                                required\r\n                                minLength=\"2\"\r\n                                value={formData.username}\r\n                                onChange={(e) => handleChange('username', e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"\"\r\n                                required\r\n                                minLength=\"2\"\r\n                                value={formData.password}\r\n                                onChange={(e) => handleChange('password', e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"button\"\r\n                                className=\"btnSubmit btn btn-primary\"\r\n                                value=\"Login\"\r\n                                onClick={handleLogin}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <a href=\"#\" className=\"btnForgetPwd\">\r\n                                Forgot Password?\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"error\">{error}</div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\nimport AuthService from '../../_services/Authservice';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nclass Logout extends Component {\r\n    handleLoginClick() {\r\n        <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: { from: 'logout' },\r\n            }}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        AuthService.instance.logout();\r\n        setTimeout(() => {\r\n            MessageBus.emit(AppConstants.MSG_LOGGED_IN, {\r\n                isLoggedIn: false,\r\n                user: { name: '' },\r\n            });\r\n        }, 100);\r\n        return (\r\n            <div>\r\n                <p>You are logged out</p>\r\n                <p>\r\n                    Click{' '}\r\n                    <NavLink exact to=\"/home\">\r\n                        HERE\r\n                    </NavLink>{' '}\r\n                    to login.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\nimport Reports from '../Reports/Reports';\r\nimport Users from '../Users/Users';\r\nimport Codes from '../Codes/Codes';\r\nimport Items from '../Items/Items';\r\nimport Login from '../Login/Login';\r\nimport Logout from '../Logout/Logout';\r\nimport AuthService from '../../_services/Authservice';\r\n\r\nconst Router = (props) => (\r\n    <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <PrivateRoute path=\"/reports\" component={Reports} />\r\n        <PrivateRoute path=\"/users\" component={Users} />\r\n        <PrivateRoute path=\"/codes\" component={Codes} />\r\n        <PrivateRoute path=\"/items\" component={Items} />\r\n        <PrivateRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n);\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            AuthService.instance.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\n\r\nclass CodeSelector extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        let cmpStyle = {\r\n            width: 'auto',\r\n            marginRight: '5px',\r\n        };\r\n        return (\r\n            <div style={cmpStyle}>\r\n                <select\r\n                    className=\"form-control-inline form-control-sm\"\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.props.onChange(this.props.name, e)}\r\n                >\r\n                    {this.props.options.map((c) => (\r\n                        <option key={c.key} value={c.code}>\r\n                            {c.code}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeSelector;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport CodeSelector from '../CodeSelector/CodeSelector';\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './itemeditor.scss';\r\n\r\nclass ItemEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codes = [];\r\n    users = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'itemeditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n        this.state.codeService.getAll().then((resp) => {\r\n            this.codes = resp;\r\n        });\r\n        this.state.userService.getAll().then((resp) => {\r\n            this.users = resp;\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            let codelist = this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n            codelist.unshift({ key: codeType + '_0', code: '' });\r\n            return codelist;\r\n        }\r\n        let userlist = this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n        userlist.unshift({ key: codeType + '_0', code: '' });\r\n        return userlist;\r\n    }\r\n\r\n    handleSave() {\r\n        const error = this.validate();\r\n        if (error !== '') {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let promise = null;\r\n        if (this.state.model > 0) {\r\n            promise = this.state.itemService.updateItem(this.state.model);\r\n        } else {\r\n            promise = this.state.itemService.insertItem(this.state.model);\r\n        }\r\n        promise.then((resp) => {\r\n            const payload = {\r\n                target: 'itemsandcodes',\r\n                data: this.state.model,\r\n            };\r\n            MessageBus.emit(AppConstants.MSG_REFRESH_DATA, payload);\r\n            this.closeModal();\r\n        });\r\n    }\r\n\r\n    validate() {\r\n        if (this.state.model.title === '') {\r\n            return 'You must enter a title';\r\n        }\r\n        if (this.state.model.boardcode === '') {\r\n            return 'You must enter a boardcode';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.model) {\r\n            return null;\r\n        }\r\n        const title = this.state.model.id === 0 ? 'Create New Item' : 'Edit Item ' + this.state.model.id;\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">{title}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Title\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                value={this.state.model.title}\r\n                                                onChange={(e) => this.handleChange('title', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"description\">\r\n                                                Description\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                required\r\n                                                minLength=\"4\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"controlrow\">\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Kanban Board</div>\r\n                                                <CodeSelector\r\n                                                    name=\"boardcode\"\r\n                                                    value={this.state.model.boardcode}\r\n                                                    options={this.getSelectOptions('id', 'BOARD')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Project</div>\r\n                                                <CodeSelector\r\n                                                    name=\"projectcode\"\r\n                                                    value={this.state.model.projectcode}\r\n                                                    options={this.getSelectOptions('id', 'PROJECT')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Priority</div>\r\n                                                <CodeSelector\r\n                                                    name=\"prioritycode\"\r\n                                                    value={this.state.model.prioritycode}\r\n                                                    options={this.getSelectOptions('id', 'PRIORITY')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Size</div>\r\n                                                <CodeSelector\r\n                                                    name=\"sizecode\"\r\n                                                    value={this.state.model.sizecode}\r\n                                                    options={this.getSelectOptions('id', 'SIZE')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Status</div>\r\n                                                <CodeSelector\r\n                                                    name=\"statuscode\"\r\n                                                    value={this.state.model.statuscode}\r\n                                                    options={this.getSelectOptions('id', 'STATUS')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group dropdown\">\r\n                                                <div className=\"caption\">Assigned To</div>\r\n                                                <CodeSelector\r\n                                                    name=\"assignedtouser\"\r\n                                                    value={this.state.model.assignedtouser}\r\n                                                    options={this.getSelectOptions('id', 'ASSIGNED')}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"comments\">\r\n                                                Comments\r\n                                            </label>\r\n                                            <textarea\r\n                                                rows=\"3\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"comments\"\r\n                                                name=\"comments\"\r\n                                                value={this.state.model.comments}\r\n                                                onChange={(e) => this.handleChange('comments', e)}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.closeModal}>\r\n                                            Close\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport ItemService from '../../_services/Itemservice';\r\nimport CodeService from '../../_services/Codeservice';\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport { ECodeType } from '../../_interfaces/code';\r\n\r\nimport './codeeditor.scss';\r\n\r\nclass CodeEditor extends Component {\r\n    state = {\r\n        itemService: ItemService.instance,\r\n        codeService: CodeService.instance,\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    codeTypes = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'codeeditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n        this.codeTypes = Object.values(ECodeType);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    getSelectOptions(key, codeType) {\r\n        if (codeType !== 'ASSIGNED') {\r\n            return this.codes\r\n                .filter((x) => x.codetype === codeType)\r\n                .map((x) => {\r\n                    return {\r\n                        key: codeType + '_' + x.id,\r\n                        code: x.code,\r\n                    };\r\n                });\r\n        }\r\n        return this.users.map((x) => {\r\n            return {\r\n                key: codeType + '_' + x.id,\r\n                code: x.username,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.state.codeService.updateCode(this.state.model);\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (!this.state.model) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit Code {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code Type\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"codetype\"\r\n                                                name=\"codetype\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('codetype', e)}\r\n                                            >\r\n                                                {this.codeTypes.map((c) => (\r\n                                                    <option key={c} value={c}>\r\n                                                        {c}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Code\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"code\"\r\n                                                name=\"code\"\r\n                                                value={this.state.model.code}\r\n                                                onChange={(e) => this.handleChange('code', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"title\">\r\n                                                Description\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                value={this.state.model.description}\r\n                                                onChange={(e) => this.handleChange('description', e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from 'react';\r\n\r\nimport UserService from '../../_services/Userservice';\r\n\r\nimport AppConstants from '../../appconstants';\r\nimport MessageBus from '../../_services/Messagebus';\r\n\r\nimport './usereditor.scss';\r\n\r\nclass UserEditor extends Component {\r\n    state = {\r\n        userService: UserService.instance,\r\n        model: null,\r\n        modalShow: '',\r\n        display: 'none',\r\n    };\r\n    roles = ['admin', 'user'];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageBus.listenFor(AppConstants.MSG_OPEN_MODAL, (payload) => {\r\n            if (payload.target === 'usereditor') {\r\n                this.setState({ model: payload.data });\r\n                if (payload.data !== null) {\r\n                    this.openModal();\r\n                } else {\r\n                    this.closeModal();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalShow: 'show',\r\n            display: 'block',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalShow: '',\r\n            display: 'none',\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        this.state.userService.updateUser(this.state.model);\r\n        this.closeModal();\r\n    }\r\n\r\n    handleChange(name, e) {\r\n        let model = this.state.model;\r\n        model[name] = e.target.value;\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    handleSubmit() {}\r\n\r\n    render() {\r\n        if (this.state.model === null) {\r\n            return false;\r\n        }\r\n        return (\r\n            <div className=\"modale\" aria-hidden=\"true\" style={{ display: this.state.display }}>\r\n                <div\r\n                    className={'modal fade ' + this.state.modalShow}\r\n                    id=\"modalItem\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-hidden=\"true\"\r\n                    style={{ display: this.state.display }}\r\n                >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <form className=\"needs-validation\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Edit User {this.state.model.id}</h5>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"close\"\r\n                                            data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"username\">\r\n                                                User Name\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"username\"\r\n                                                name=\"username\"\r\n                                                value={this.state.model.username}\r\n                                                onChange={(e) => this.handleChange('username', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"name\">\r\n                                                Full Name\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"name\"\r\n                                                name=\"name\"\r\n                                                value={this.state.model.name}\r\n                                                onChange={(e) => this.handleChange('name', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"email\">\r\n                                                Email\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control form-control-sm input-sm\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                                value={this.state.model.email}\r\n                                                onChange={(e) => this.handleChange('email', e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"label\" htmlFor=\"role\">\r\n                                                Role\r\n                                            </label>\r\n                                            <select\r\n                                                className=\"form-control form-control-sm input-sm dropdown\"\r\n                                                id=\"role\"\r\n                                                name=\"role\"\r\n                                                value={this.state.model.role}\r\n                                                onChange={(e) => this.handleChange('role', e)}\r\n                                            >\r\n                                                {this.roles.map((c) => (\r\n                                                    <option key={c} value={c}>\r\n                                                        {c}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={this.closeModal}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={this.handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEditor;\r\n","import React from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Router from './Router/Router';\r\nimport ItemEditor from './Items/Itemeditor';\r\nimport CodeEditor from './Codes/Codeeditor';\r\nimport UserEditor from './Users/Usereditor';\r\n\r\nconst App = (props) => {\r\n    let appStyle = {\r\n        width: '80%',\r\n        margin: 'auto',\r\n        maxHeight: '100vh',\r\n        minHeight: '100vh',\r\n        display: 'grid',\r\n        gridTemplateRows: 'auto 1fr',\r\n    };\r\n    return (\r\n        <div style={appStyle}>\r\n            <Header />\r\n            <Router />\r\n            <ItemEditor />\r\n            <CodeEditor />\r\n            <UserEditor />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { FakeDataLoader } from './_helpers/fake-data';\r\nimport { InitFakeBackend } from './_helpers/fake-backend';\r\n\r\nimport App from './components/App';\r\n\r\nimport './index.scss';\r\n\r\nFakeDataLoader();\r\nInitFakeBackend();\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n","import { db, persistDb } from './fake-data';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nexport function InitFakeBackend() {\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        const { method, headers } = opts;\r\n        const body = opts.body && JSON.parse(opts.body);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(handleRoute, 250);\r\n\r\n            function handleRoute() {\r\n                switch (true) {\r\n                    case url.includes('/user/'):\r\n                        return handleUserRoute(url, method);\r\n                        break;\r\n                    case url.includes('/code/'):\r\n                        return handleCodeRoute(url, method);\r\n                        break;\r\n                    case url.includes('/item/'):\r\n                        return handleItemRoute(url, method);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * user route handler\r\n             */\r\n            function handleUserRoute(url, method) {\r\n                const dtype = 'users';\r\n                switch (true) {\r\n                    case url.endsWith('/authenticate') && method === 'POST':\r\n                        return authenticate(body.dat);\r\n                        break;\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleCodeRoute(url, method) {\r\n                const dtype = 'code';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n            /**\r\n             * code route handler\r\n             */\r\n            function handleItemRoute(url, method) {\r\n                const dtype = 'item';\r\n                switch (true) {\r\n                    case url.endsWith('/update') && method === 'POST':\r\n                        return doUpdate(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/insert') && method === 'POST':\r\n                        return doInsert(body, dtype);\r\n                        break;\r\n                    case url.endsWith('/getall') && method === 'GET':\r\n                        return doGetAll(dtype);\r\n                        break;\r\n                    default:\r\n                        return realFetch(url, opts)\r\n                            .then((response) => resolve(response))\r\n                            .catch((error) => reject(error));\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * authenticate user\r\n             */\r\n            function authenticate(dat) {\r\n                let dec = CryptoJS.Rabbit.decrypt(dat, 'QprU5OzwntBSJFfo6b6XRByY8G8cQELn');\r\n                const tmp = dec.toString(CryptoJS.enc.Utf8);\r\n                const a = tmp.split('.');\r\n                let row = db.users.find((x) => x.username === a[0] && x.password === a[1]);\r\n                if (row === undefined) {\r\n                    return error('Invalid credentials');\r\n                }\r\n                const user = row;\r\n                return ok({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    name: user.name,\r\n                    email: '',\r\n                    role: user.role,\r\n                    token: `dummy-jwt-token.${user.id}`,\r\n                    boardcode: user.boardcode,\r\n                });\r\n            }\r\n            /**\r\n             * update existing row\r\n             */\r\n            function doUpdate(dat, dtype) {\r\n                let row = db[dtype].find((x) => x.id === dat.id);\r\n                Object.keys(dat).forEach((fld) => {\r\n                    if (fld !== 'id') {\r\n                        row[fld] = dat[fld];\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * insert new row\r\n             */\r\n            function doInsert(dat, dtype) {\r\n                db[dtype].push(dat);\r\n                setTimeout(() => {\r\n                    persistDb();\r\n                }, 250);\r\n                return ok({});\r\n            }\r\n            /**\r\n             * get all rows\r\n             */\r\n            function doGetAll(dtype) {\r\n                let results = db[dtype];\r\n                return ok(results);\r\n            }\r\n            /**\r\n             * util functions\r\n             */\r\n            function ok(body) {\r\n                resolve({\r\n                    status: 200,\r\n                    json: () => JSON.stringify(body),\r\n                });\r\n            }\r\n\r\n            function unauthorized() {\r\n                resolve({\r\n                    status: 401,\r\n                    json: () => JSON.stringify({ message: 'Unauthorized' }),\r\n                });\r\n            }\r\n\r\n            function error(message) {\r\n                resolve({\r\n                    status: 400,\r\n                    json: () => JSON.stringify({ message }),\r\n                });\r\n            }\r\n\r\n            function idFromUrl() {\r\n                const urlParts = url.split('/');\r\n                return parseInt(urlParts[urlParts.length - 1]);\r\n            }\r\n        });\r\n    };\r\n}\r\n"],"sourceRoot":""}